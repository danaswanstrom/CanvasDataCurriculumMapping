{
  "version": "1.16.1",
  "schema": {
    "course": {
      "dw_type": "dimension",
      "description": "A course in the canvas system",
      "columns": [
        {
          "type": "bigint",
          "description": "Unique surrogate id for a course",
          "name": "id"
        },
        {
          "type": "bigint",
          "description": "Primary key for this course in the canvas courses table.",
          "name": "canvas_id"
        },
        {
          "type": "bigint",
          "description": "The root account associated with this course.",
          "name": "root_account_id"
        },
        {
          "type": "bigint",
          "description": "The parent account for this course.",
          "name": "account_id",
          "dimension": {
            "name": "account",
            "id": "id",
            "role": "account"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to enrollment term table",
          "name": "enrollment_term_id",
          "dimension": {
            "name": "enrollment_term",
            "id": "id",
            "role": "enrollment_term"
          }
        },
        {
          "description": "The friendly name of the course.",
          "name": "name",
          "type": "varchar",
          "length": 256
        },
        {
          "description": "The code for the course (e.g. FA12 MATH 2000)",
          "name": "code",
          "type": "varchar",
          "length": 256
        },
        {
          "description": "deprecated. No longer used, will always be NULL.",
          "name": "type",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "timestamp",
          "description": "Timestamp when the course object was created in Canvas",
          "name": "created_at"
        },
        {
          "type": "timestamp",
          "description": "Timestamp for when the course starts.",
          "name": "start_at"
        },
        {
          "type": "timestamp",
          "description": "Timestamp for when the course finishes",
          "name": "conclude_at"
        },
        {
          "type": "boolean",
          "description": "True if the course is publicly visible",
          "name": "publicly_visible"
        },
        {
          "description": "Correlated id for the record for this course in the SIS system (assuming SIS integration is configured)",
          "name": "sis_source_id",
          "type": "varchar",
          "length": 256
        },
        {
          "description": "Workflow status indicating the current state of the course, valid values are: completed (course has been hard concluded), created (course has been created, but not published), deleted (course has been deleted), available (course is published, and not hard concluded), claimed (course has been undeleted, and is not published).",
          "name": "workflow_state",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "bigint",
          "description": "Foreign key to the wiki_dim table.",
          "name": "wiki_id"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "course_dim"
    },
    "account": {
      "dw_type": "dimension",
      "description": "An account object in the Canvas system.  Accounts are most often used to represent a hierarchy of colleges, schools, departments, campuses, etc.",
      "columns": [
        {
          "type": "bigint",
          "description": "Unique surrogate id for an account",
          "name": "id"
        },
        {
          "type": "bigint",
          "description": "Primary key for this entry in the Canvas accounts table",
          "name": "canvas_id"
        },
        {
          "description": "Name of the account",
          "name": "name",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "int",
          "description": "Depth of the account in the hierarchy.  The root node is at 0.",
          "name": "depth"
        },
        {
          "description": "Workflow status indicating that account is [deleted] or [active]",
          "name": "workflow_state",
          "type": "varchar",
          "length": 256
        },
        {
          "description": "Name of this account's parent account.  This field will be NULL for the root account.",
          "name": "parent_account",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "bigint",
          "description": "Id of this account's parent account.  This field will be NULL for the root account.",
          "name": "parent_account_id"
        },
        {
          "description": "Name of this account's grand parent account.  This field will be NULL for the root account and all accounts at level 1.",
          "name": "grandparent_account",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "bigint",
          "description": "Id of this account's grand parent account.  This field will be NULL for the root account and all subaccounts at level 1.",
          "name": "grandparent_account_id"
        },
        {
          "description": "Name of the root account associated with this account.",
          "name": "root_account",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "bigint",
          "description": "Id of the root account associated with this account.",
          "name": "root_account_id"
        },
        {
          "description": "Name of this account's parent at subaccount level 1.  If this account is a level 1 account, this will be the name of this account.",
          "name": "subaccount1",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "bigint",
          "description": "Id of this account's parent at subaccount level 1.  If this account is a level 1 account, this will be the id of this account.",
          "name": "subaccount1_id"
        },
        {
          "description": "Name of this account's parent at subaccount level 2.  If this account is a level 2 account, subaccount2 will be the name of this account.",
          "name": "subaccount2",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "bigint",
          "description": "Id of this account's parent at subaccount level 2.  If this account is a level 2 account, subaccount2_id will be the id of this account.",
          "name": "subaccount2_id"
        },
        {
          "description": "Name of this account's parent at subaccount level 3.  If this account is a level 3 account, subaccount3 will be the name of this account.",
          "name": "subaccount3",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "bigint",
          "description": "Id of this account's parent at subaccount level 3.  If this account is a level 3 account, subaccount3_id will be the id of this account.",
          "name": "subaccount3_id"
        },
        {
          "description": "Name of this account's parent at subaccount level 4.  If this account is a level 4 account, subaccount4 will be the name of this account.",
          "name": "subaccount4",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "bigint",
          "description": "Id of this account's parent at subaccount level 4.  If this account is a level 4 account, subaccount4_id will be the id of this account.",
          "name": "subaccount4_id"
        },
        {
          "description": "Name of this account's parent at subaccount level 5.  If this account is a level 5 account, subaccount5 will be the name of this account.",
          "name": "subaccount5",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "bigint",
          "description": "Id of this account's parent at subaccount level 5.  If this account is a level 5 account, subaccount5_id will be the id of this account.",
          "name": "subaccount5_id"
        },
        {
          "description": "Name of this account's parent at subaccount level 6.  If this account is a level 6 account, subaccount6 will be the name of this account.",
          "name": "subaccount6",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "bigint",
          "description": "Id of this account's parent at subaccount level 6.  If this account is a level 6 account, subaccount6_id will be the id of this account.",
          "name": "subaccount6_id"
        },
        {
          "description": "Name of this account's parent at subaccount level 7.  If this account is a level 7 account, subaccount7 will be the name of this account.",
          "name": "subaccount7",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "bigint",
          "description": "Id of this account's parent at subaccount level 7.  If this account is a level 7 account, subaccount7_id will be the id of this account.",
          "name": "subaccount7_id"
        },
        {
          "description": "Name of this account's parent at subaccount level 8.  If this account is a level 8 account, subaccount8 will be the name of this account.",
          "name": "subaccount8",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "bigint",
          "description": "Id of this account's parent at subaccount level 8.  If this account is a level 8 account, subaccount8_id will be the id of this account.",
          "name": "subaccount8_id"
        },
        {
          "description": "Name of this account's parent at subaccount level 9.  If this account is a level 9 account, subaccount9 will be the name of this account.",
          "name": "subaccount9",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "bigint",
          "description": "Id of this account's parent at subaccount level 9.  If this account is a level 9 account, subaccount9_id will be the id of this account.",
          "name": "subaccount9_id"
        },
        {
          "description": "Name of this account's parent at subaccount level 10.  If this account is a level 10 account, subaccount10 will be the name of this account.",
          "name": "subaccount10",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "bigint",
          "description": "Id of this account's parent at subaccount level 10.  If this account is a level 10 account, subaccount10_id will be the id of this account.",
          "name": "subaccount10_id"
        },
        {
          "description": "Name of this account's parent at subaccount level 11.  If this account is a level 11 account, subaccount11 will be the name of this account.",
          "name": "subaccount11",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "bigint",
          "description": "Id of this account's parent at subaccount level 11.  If this account is a level 11 account, subaccount11_id will be the id of this account.",
          "name": "subaccount11_id"
        },
        {
          "description": "Name of this account's parent at subaccount level 12.  If this account is a level 12 account, subaccount12 will be the name of this account.",
          "name": "subaccount12",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "bigint",
          "description": "Id of this account's parent at subaccount level 12.  If this account is a level 12 account, subaccount12_id will be the id of this account.",
          "name": "subaccount12_id"
        },
        {
          "description": "Name of this account's parent at subaccount level 13.  If this account is a level 13 account, subaccount13 will be the name of this account.",
          "name": "subaccount13",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "bigint",
          "description": "Id of this account's parent at subaccount level 13.  If this account is a level 13 account, subaccount13_id will be the id of this account.",
          "name": "subaccount13_id"
        },
        {
          "description": "Name of this account's parent at subaccount level 14.  If this account is a level 14 account, subaccount14 will be the name of this account.",
          "name": "subaccount14",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "bigint",
          "description": "Id of this account's parent at subaccount level 14.  If this account is a level 14 account, subaccount14_id will be the id of this account.",
          "name": "subaccount14_id"
        },
        {
          "description": "Name of this account's parent at subaccount level 15.  If this account is a level 15 account, subaccount15 will be the name of this account.",
          "name": "subaccount15",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "bigint",
          "description": "Id of this account's parent at subaccount level 15.  If this account is a level 15 account, subaccount15_id will be the id of this account.",
          "name": "subaccount15_id"
        },
        {
          "description": "Correlated id for the record for this course in the SIS system (assuming SIS integration is configured)",
          "name": "sis_source_id",
          "type": "varchar",
          "length": 256
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "account_dim"
    },
    "user": {
      "dw_type": "dimension",
      "description": "Attributes for users",
      "columns": [
        {
          "type": "bigint",
          "description": "Unique surrogate id for the user.",
          "name": "id"
        },
        {
          "type": "bigint",
          "description": "Primary key for this user in the Canvas users table.",
          "name": "canvas_id"
        },
        {
          "type": "bigint",
          "description": "Root account associated with this user.",
          "name": "root_account_id"
        },
        {
          "description": "Name of the user",
          "name": "name",
          "type": "varchar",
          "length": 256
        },
        {
          "description": "User's primary timezone",
          "name": "time_zone",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "timestamp",
          "description": "Timestamp when the user was created in the Canvas system",
          "name": "created_at"
        },
        {
          "description": "(Deprecated) No longer used in Canvas.",
          "name": "visibility",
          "type": "varchar",
          "length": 256
        },
        {
          "description": "Used in Trial Versions of Canvas, the school the user is associated with",
          "name": "school_name",
          "type": "varchar",
          "length": 256
        },
        {
          "description": "Used in Trial Versions of Canvas, the position the user has at the school. E.g. Admin",
          "name": "school_position",
          "type": "varchar",
          "length": 256
        },
        {
          "description": "The user's gender. This is an optional field and may not be entered by the user.",
          "name": "gender",
          "type": "varchar",
          "length": 256
        },
        {
          "description": "The user's locale. This is an optional field and may not be entered by the user.",
          "name": "locale",
          "type": "varchar",
          "length": 256
        },
        {
          "description": "Used in Trial Versions of Canvas, the type of school the user is associated with",
          "name": "public",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "timestamp",
          "description": "The user's birth date. This is an optional field and may not be entered by the user.",
          "name": "birthdate"
        },
        {
          "description": "The user's country code. This is an optional field and may not be entered by the user.",
          "name": "country_code",
          "type": "varchar",
          "length": 256
        },
        {
          "description": "Workflow status indicating the status of the user, valid values are: creation_pending, deleted, pre_registered, registered",
          "name": "workflow_state",
          "type": "varchar",
          "length": 256
        },
        {
          "description": "Name of the user that is should be used for sorting groups of users, such as in the gradebook.",
          "name": "sortable_name",
          "type": "varchar",
          "length": 256
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "user_dim"
    },
    "pseudonym_dim": {
      "dw_type": "dimension",
      "description": "Pseudonyms are logins associated with users.",
      "columns": [
        {
          "type": "bigint",
          "description": "Unique surrogate id for the pseudonym.",
          "name": "id"
        },
        {
          "type": "bigint",
          "description": "Primary key for this pseudonym in the the Canvas database",
          "name": "canvas_id"
        },
        {
          "type": "bigint",
          "description": "Id for the user associated with this pseudonym",
          "name": "user_id",
          "dimension": {
            "name": "user",
            "id": "id",
            "role": "user"
          }
        },
        {
          "type": "bigint",
          "description": "Id for the account associated with this pseudonym",
          "name": "account_id",
          "dimension": {
            "name": "account",
            "id": "id",
            "role": "account"
          }
        },
        {
          "description": "Workflow status indicating that pseudonym is [deleted] or [active]",
          "name": "workflow_state",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "timestamp",
          "description": "Timestamp of when the user last logged in with this pseudonym",
          "name": "last_request_at"
        },
        {
          "type": "timestamp",
          "description": "Timestamp of last time a user logged in with this pseudonym",
          "name": "last_login_at"
        },
        {
          "type": "timestamp",
          "description": "Timestamp of when the user logged in",
          "name": "current_login_at"
        },
        {
          "description": "IP address recorded the last time a user logged in with this pseudonym",
          "name": "last_login_ip",
          "type": "varchar",
          "length": 256
        },
        {
          "description": "IP address  of user's current/last login",
          "name": "current_login_ip",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "int",
          "description": "Position of user's login credentials",
          "name": "position"
        },
        {
          "type": "timestamp",
          "description": "Timestamp when this pseudonym was created in Canvas",
          "name": "created_at"
        },
        {
          "type": "timestamp",
          "description": "Timestamp when this pseudonym was last updated in Canvas",
          "name": "updated_at"
        },
        {
          "type": "boolean",
          "description": "True if the password has been auto-generated",
          "name": "password_auto_generated"
        },
        {
          "type": "timestamp",
          "description": "Timestamp when the pseudonym was deleted (NULL if the pseudonym is still active)",
          "name": "deleted_at"
        },
        {
          "description": "Correlated id for the record for this course in the SIS system (assuming SIS integration is configured)",
          "name": "sis_user_id",
          "type": "varchar",
          "length": 256
        },
        {
          "description": "Actual login id for a given pseudonym/account",
          "name": "unique_name",
          "type": "varchar",
          "length": 256
        },
        {
          "description": "A secondary unique identifier useful for more complex SIS integrations. This identifier must not change for the user, and must be globally unique.",
          "name": "integration_id",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "bigint",
          "description": "The authentication provider this login is associated with. This can be the integer ID of the provider, or the type of the provider (in which case, it will find the first matching provider.)",
          "name": "authentication_provider_id"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "pseudonym_dim"
    },
    "pseudonym_fact": {
      "dw_type": "fact",
      "columns": [
        {
          "type": "bigint",
          "description": "Foreign key to pseudonym dimension table",
          "name": "pseudonym_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to user associated with this pseudonym",
          "name": "user_id",
          "dimension": {
            "name": "user",
            "id": "id",
            "role": "user"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to account associated with this pseudonym",
          "name": "account_id",
          "dimension": {
            "name": "account",
            "id": "id",
            "role": "account"
          }
        },
        {
          "type": "int",
          "description": "Number of times a user has logged in with this pseudonym",
          "name": "login_count"
        },
        {
          "type": "int",
          "description": "Number of times failed login attempt to this pseudonym",
          "name": "failed_login_count"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "pseudonym_fact"
    },
    "assignment_dim": {
      "description": "Attributes for for assignments.  There is one record in this table for each assignment.  Individual submissions of the assignment are in the submission_dim and submission_fact tables.",
      "dw_type": "dimension",
      "columns": [
        {
          "type": "bigint",
          "description": "Unique surrogate ID for the assignment.",
          "name": "id"
        },
        {
          "type": "bigint",
          "description": "Primary key for this record in the Canvas assignments table.",
          "name": "canvas_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the course associated with this assignment",
          "name": "course_id",
          "dimension": {
            "name": "course",
            "id": "id",
            "role": "course"
          }
        },
        {
          "description": "Title of the assignment",
          "name": "title",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "text",
          "description": "Long description of the assignment",
          "name": "description"
        },
        {
          "type": "timestamp",
          "description": "Timestamp for when the assignment is due",
          "name": "due_at"
        },
        {
          "type": "timestamp",
          "description": "Timestamp for when the assignment is unlocked or visible to the user",
          "name": "unlock_at"
        },
        {
          "type": "timestamp",
          "description": "Timestamp for when the assignment is locked",
          "name": "lock_at"
        },
        {
          "type": "double precision",
          "description": "Total points possible for the assignment",
          "name": "points_possible"
        },
        {
          "description": "Describes how the assignment will be graded (gpa_scale, pass_fail, percent, points, not_graded, letter_grade)",
          "name": "grading_type",
          "type": "varchar",
          "length": 256
        },
        {
          "description": "Comma separated list of valid methods for submitting the assignment (online_url, media_recording, online_upload, online_quiz, external_tool, online_text_entry, online_file_upload)",
          "name": "submission_types",
          "type": "varchar",
          "length": 256
        },
        {
          "description": "Current workflow state of the assignment.  Possible values are unpublished, published and deleted",
          "name": "workflow_state",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "timestamp",
          "description": "Timestamp of the first time the assignment was entered into the system",
          "name": "created_at"
        },
        {
          "type": "timestamp",
          "description": "Timestamp of the last time the assignment was updated",
          "name": "updated_at"
        },
        {
          "type": "int",
          "description": "The number of pears to assign for review if using algorithmic assignment",
          "name": "peer_review_count"
        },
        {
          "type": "timestamp",
          "description": "Timestamp for when peer reviews should be completed",
          "name": "peer_reviews_due_at"
        },
        {
          "type": "boolean",
          "description": "True if all peer reviews have been assigned",
          "name": "peer_reviews_assigned"
        },
        {
          "type": "boolean",
          "description": "True if peer reviews are enabled for this assignment",
          "name": "peer_reviews"
        },
        {
          "type": "boolean",
          "description": "True if peer reviews are assigned algorithmically (vs. letting the instructor make manual assignments)",
          "name": "automatic_peer_reviews"
        },
        {
          "type": "boolean",
          "description": "True if A specific time for when the assignment is due was not given.  The effective due time will be 11:59pm.",
          "name": "all_day"
        },
        {
          "type": "date",
          "description": "The date version of the due date if the all_day flag is true.",
          "name": "all_day_date"
        },
        {
          "type": "boolean",
          "description": "True if the assignment is under a module that can be locked",
          "name": "could_be_locked"
        },
        {
          "type": "boolean",
          "description": "True if students who submit work as a group will each receive individual grades (vs one grade that is copied to all group members)",
          "name": "grade_group_students_individually"
        },
        {
          "type": "boolean",
          "description": "(currently unimplemented, do not use)",
          "name": "anonymous_peer_reviews"
        },
        {
          "type": "boolean",
          "description": "Student cannot see grades left on the assignment.",
          "name": "muted"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the assignment group dimension table.",
          "name": "assignment_group_id"
        },
        {
          "type": "integer",
          "description": "The sorting order of the assignment in the group",
          "name": "position"
        },
        {
          "type": "enum",
          "description": "User sets that can view the assignment. Possible values ('everyone', 'only_visible_to_overrides')",
          "name": "visibility"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "assignment_dim"
    },
    "assignment_fact": {
      "description": "Table contains measures related to assignments.",
      "dw_type": "fact",
      "columns": [
        {
          "type": "bigint",
          "description": "Foreign key to assignment dimension",
          "name": "assignment_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the course associated with this assignment",
          "name": "course_id",
          "dimension": {
            "name": "course",
            "id": "id",
            "role": "course"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the account associated with the course associated with this assignment",
          "dimension": {
            "name": "account_dim",
            "id": "id"
          },
          "name": "course_account_id"
        },
        {
          "type": "bigint",
          "description": "Foreign Key to enrollment term table",
          "name": "enrollment_term_id",
          "dimension": {
            "name": "enrollment_term",
            "id": "id",
            "role": "enrollment_term"
          }
        },
        {
          "type": "double precision",
          "description": "Total points possible for the assignment",
          "name": "points_possible"
        },
        {
          "type": "int",
          "description": "The number of pears to assign for review if using algorithmic assignment",
          "name": "peer_review_count"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the assignment group dimension table.",
          "name": "assignment_group_id"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "assignment_fact"
    },
    "assignment_rule_dim": {
      "dw_type": "dimension",
      "description": "Rules associated with an assignment.",
      "columns": [
        {
          "type": "bigint",
          "description": "ID of the assignment which can never be dropped from the group.",
          "name": "assignment_id"
        },
        {
          "type": "varchar",
          "description": "Denotes if the assignment can be dropped from the assignment group if the group allows dropping assignments based on certain rules. Is set to 'never_drop' if the assignment is exempted from dropping, else set to 'can_be_dropped'.",
          "name": "drop_rule",
          "length": 256
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "assignment_rule_dim"
    },
    "submission_dim": {
      "dw_type": "dimension",
      "description": "This table records the latest submission for an assignment.",
      "columns": [
        {
          "type": "bigint",
          "description": "Unique surrogate ID for the submission.",
          "name": "id"
        },
        {
          "type": "bigint",
          "description": "Primary key of this record in the Canvas submissions table.",
          "name": "canvas_id"
        },
        {
          "type": "text",
          "description": "Text content for the submission.",
          "name": "body"
        },
        {
          "description": "URL content for the submission.",
          "name": "url",
          "type": "varchar",
          "length": 256
        },
        {
          "description": "Letter grade mapped from the score by the grading scheme.",
          "name": "grade",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "timestamp",
          "description": "Timestamp of when the submission was submitted.",
          "name": "submitted_at"
        },
        {
          "type": "enum",
          "description": "Type of submission. Possible values are 'discussion_topic', 'external_tool', 'media_recording', 'online_file_upload', 'online_quiz', 'online_text_entry', 'online_upload' and 'online_url'.",
          "name": "submission_type"
        },
        {
          "type": "enum",
          "description": "Workflow state for submission lifetime values. Possible values are 'graded', 'pending_review', 'submitted' and 'unsubmitted'.",
          "name": "workflow_state"
        },
        {
          "type": "timestamp",
          "description": "Timestamp of when the submission was created.",
          "name": "created_at"
        },
        {
          "type": "timestamp",
          "description": "Timestamp of when the submission was last updated.",
          "name": "updated_at"
        },
        {
          "type": "boolean",
          "description": "Valid only when there is a file/attachment associated with the submission. By default, this attribute is set to 'false' when making the assignment submission. When a submission has a file/attachment associated with it, upon submitting the assignment a snapshot is saved and its' value is set to 'true'. Defaults to 'NULL'.",
          "name": "processed"
        },
        {
          "type": "int",
          "description": "(Deprecated) No longer used in Canvas.",
          "name": "process_attempts"
        },
        {
          "type": "boolean",
          "description": "Valid only when a score has been assigned to a submission. This is set to 'false' if a student makes a new submission to an already graded assignment. This is done to indicate that the current grade given by the teacher is not for the most recent submission by the student. It is set to 'true' if a score has been given and there is no new submission. Defaults to 'NULL'.",
          "name": "grade_matches_current_submission"
        },
        {
          "description": "Valid only for a graded submission. The values are strings that reflect the grading type used. For example, a scoring method of 'points' will show '4' if given a '4' out of '5', and a scoring method of 'letter grade' will show 'B' for the same score (assuming a grading scale where 80-90% is a 'B'). Defaults to 'NULL'.",
          "name": "published_grade",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "timestamp",
          "description": "Timestamp of when the submission was graded.",
          "name": "graded_at"
        },
        {
          "type": "boolean",
          "description": "Valid only for a graded submission. Its' value is set to 'true' if the submission is associated with a rubric that has been assessed for at least one student, otherwise is set to 'false'. Defaults to 'NULL'.",
          "name": "has_rubric_assessment"
        },
        {
          "type": "int",
          "description": "The number of attempts made including this one.",
          "name": "attempt"
        },
        {
          "type": "boolean",
          "description": "(Deprecated) No longer used in Canvas.",
          "name": "has_admin_comment"
        },
        {
          "type": "bigint",
          "description": "Foreign key to assignment dimension.",
          "name": "assignment_id"
        },
        {
          "type": "enum",
          "description": "Denotes if this submission is excused or not. Possible values are 'excused_submission' and 'regular_submission'.",
          "name": "excused"
        },
        {
          "type": "enum",
          "description": "Denotes how the grading has been performed. Possible values are 'graded_anonymously' and 'not_graded_anonymously'.",
          "name": "graded_anonymously"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the user dimension of user who graded the assignment.",
          "dimension": {
            "name": "user_dim",
            "id": "id"
          },
          "name": "grader_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the group_dim table.",
          "name": "group_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the quiz_submission_dim table.",
          "name": "quiz_submission_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the user_dim table.",
          "name": "user_id",
          "dimension": {
            "name": "user",
            "id": "id",
            "role": "user"
          }
        },
        {
          "type": "enum",
          "description": "Denotes the current state of the grade. Possible values are 'auto_graded', 'human_graded' and 'not_graded'.",
          "name": "grade_state"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "submission_dim"
    },
    "submission_fact": {
      "dw_type": "fact",
      "columns": [
        {
          "type": "bigint",
          "description": "Foreign key to submission dimension",
          "name": "submission_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to assignment dimension",
          "name": "assignment_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to course dimension of course associated with the assignment.",
          "name": "course_id",
          "dimension": {
            "name": "course",
            "id": "id",
            "role": "course"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign Key to enrollment term table",
          "name": "enrollment_term_id",
          "dimension": {
            "name": "enrollment_term",
            "id": "id",
            "role": "enrollment_term"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to user dimension of user who submitted the assignment.",
          "name": "user_id",
          "dimension": {
            "name": "user",
            "id": "id",
            "role": "user"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the user dimension of user who graded the assignment.",
          "dimension": {
            "name": "user_dim",
            "id": "id"
          },
          "name": "grader_id"
        },
        {
          "type": "bigint",
          "description": "(Deprecated) Foreign key to the account dimension of the account associated with the course associated with the assignment. Please use 'account_id' instead.",
          "dimension": {
            "name": "account_dim",
            "id": "id"
          },
          "name": "course_account_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the enrollment roll-up dimension table.",
          "name": "enrollment_rollup_id",
          "dimension": {
            "name": "enrollment_rollup",
            "id": "id",
            "role": "enrollment_rollup"
          }
        },
        {
          "type": "double precision",
          "description": "Numeric grade given to the submission.",
          "name": "score"
        },
        {
          "type": "double precision",
          "description": "Valid only for a graded submission. It reflects the numerical value of the actual score. Referring to our previous example for 'submission_dim.published_grade', let's take two submissions, one for an assignment with a scoring method of 'points' and the other for an assignment with a scoring method of 'letter grade'. If the published grade is '4' out of '5' and 'B' for them, respectively, then they should both have a score of '4' out of '5'. And their 'published_score' values will be identical, '4.0'. Defaults to 'NULL'.",
          "name": "published_score"
        },
        {
          "type": "double precision",
          "description": "Valid only if the student ever entered a 'What If' score for an assignment in the Canvas UI. Only the most recent score entered by the student is stored here. Any time a new score is entered, the existing one is overwritten. Defaults to 'NULL'.",
          "name": "what_if_score"
        },
        {
          "type": "int",
          "description": "Reflects the total number of comments on the submission by anyone/everyone, excluding comments that are flagged as 'hidden'.",
          "name": "submission_comments_count"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the account the submission belongs to.",
          "name": "account_id",
          "dimension": {
            "name": "account",
            "id": "id",
            "role": "account"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the assignment group dimension table.",
          "name": "assignment_group_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the group_dim table.",
          "name": "group_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the quiz the quiz submission associated with this submission represents.",
          "name": "quiz_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the quiz_submission_dim table.",
          "name": "quiz_submission_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the wiki_dim table.",
          "name": "wiki_id"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "submission_fact"
    },
    "submission_comment_participant_fact": {
      "dw_type": "fact",
      "columns": [
        {
          "type": "bigint",
          "description": "Foreign key to the submission comment participant dimension",
          "name": "submission_comment_participant_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the submission comment dimension for the comment",
          "name": "submission_comment_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the user dimension of the user who made the comment",
          "name": "user_id",
          "dimension": {
            "name": "user",
            "id": "id",
            "role": "user"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the submission dimension related to this participant's comment",
          "name": "submission_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to assignment dimension",
          "name": "assignment_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to course dimension of course associated with the assignment.",
          "name": "course_id",
          "dimension": {
            "name": "course",
            "id": "id",
            "role": "course"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign Key to enrollment term table",
          "name": "enrollment_term_id",
          "dimension": {
            "name": "enrollment_term",
            "id": "id",
            "role": "enrollment_term"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the account dimension of the account associated with the course associated with the assignment",
          "dimension": {
            "name": "account_dim",
            "id": "id"
          },
          "name": "course_account_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the enrollment roll-up dimension table",
          "name": "enrollment_rollup_id",
          "dimension": {
            "name": "enrollment_rollup",
            "id": "id",
            "role": "enrollment_rollup"
          }
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "submission_comment_participant_fact"
    },
    "submission_comment_participant_dim": {
      "dw_type": "dimension",
      "columns": [
        {
          "type": "bigint",
          "name": "id"
        },
        {
          "type": "bigint",
          "name": "canvas_id"
        },
        {
          "name": "participation_type",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "timestamp",
          "name": "created_at"
        },
        {
          "type": "timestamp",
          "name": "updated_at"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "submission_comment_participant_dim"
    },
    "submission_comment_fact": {
      "dw_type": "fact",
      "columns": [
        {
          "type": "bigint",
          "description": "Foreign key to the submission comment dimension related to the comment",
          "name": "submission_comment_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the submission dimension related to the comment",
          "name": "submission_id"
        },
        {
          "type": "bigint",
          "description": "(Deprecated) No longer used in Canvas.",
          "dimension": {
            "name": "user_dim",
            "id": "id"
          },
          "name": "recipient_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the user dimension for the author of the comment",
          "dimension": {
            "name": "user_dim",
            "id": "id"
          },
          "name": "author_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to assignment dimension",
          "name": "assignment_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to course dimension of course associated with the assignment.",
          "name": "course_id",
          "dimension": {
            "name": "course",
            "id": "id",
            "role": "course"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign Key to enrollment term table",
          "name": "enrollment_term_id",
          "dimension": {
            "name": "enrollment_term",
            "id": "id",
            "role": "enrollment_term"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the account dimension of the account associated with the course associated with the assignment",
          "dimension": {
            "name": "account_dim",
            "id": "id"
          },
          "name": "course_account_id"
        },
        {
          "type": "int",
          "description": "The message size in bytes.",
          "name": "message_size_bytes"
        },
        {
          "type": "int",
          "description": "The message size in characters.",
          "name": "message_character_count"
        },
        {
          "type": "int",
          "description": "The message size in words using space and common punctuation as word breaks.",
          "name": "message_word_count"
        },
        {
          "type": "int",
          "description": "The number of lines in a message.",
          "name": "message_line_count"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "submission_comment_fact"
    },
    "submission_comment_dim": {
      "dw_type": "dimension",
      "columns": [
        {
          "type": "bigint",
          "name": "id"
        },
        {
          "type": "bigint",
          "name": "canvas_id"
        },
        {
          "type": "bigint",
          "name": "submission_id"
        },
        {
          "type": "bigint",
          "description": "(Deprecated) No longer used in Canvas.",
          "dimension": {
            "name": "user_dim",
            "id": "id"
          },
          "name": "recipient_id"
        },
        {
          "type": "bigint",
          "dimension": {
            "name": "user_dim",
            "id": "id"
          },
          "name": "author_id"
        },
        {
          "type": "bigint",
          "dimension": {
            "name": "user_dim",
            "id": "id"
          },
          "name": "assessment_request_id"
        },
        {
          "name": "group_comment_id",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "text",
          "name": "comment"
        },
        {
          "name": "author_name",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "timestamp",
          "name": "created_at"
        },
        {
          "type": "timestamp",
          "name": "updated_at"
        },
        {
          "type": "boolean",
          "name": "anonymous"
        },
        {
          "type": "boolean",
          "name": "teacher_only_comment"
        },
        {
          "type": "boolean",
          "name": "hidden"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "submission_comment_dim"
    },
    "assignment_group_dim": {
      "dw_type": "dimension",
      "description": "Attributes for assignment_groups.",
      "columns": [
        {
          "type": "bigint",
          "description": "Unique surrogate ID for the assignment group.",
          "name": "id"
        },
        {
          "type": "bigint",
          "description": "Primary key for this record in the Canvas assignment_groups table.",
          "name": "canvas_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the course to which the assignment group belongs to.",
          "name": "course_id",
          "dimension": {
            "name": "course",
            "id": "id",
            "role": "course"
          }
        },
        {
          "type": "varchar",
          "description": "Name of the assignment group. Defaults to 'Assignments' if no name is provided during group creation.",
          "name": "name",
          "length": 256
        },
        {
          "type": "varchar",
          "description": "Default name assigned to the assignments in the assignment group if no name is assigned to them during their creation. Also, it is the singularized version of the assignment group name by default (if it's in English).",
          "name": "default_assignment_name",
          "length": 256
        },
        {
          "type": "varchar",
          "description": "Current workflow state of the assignment groups. Possible values are 'available' and 'deleted'.",
          "name": "workflow_state",
          "length": 256
        },
        {
          "type": "integer",
          "description": "Position of the assignment group in the assignment index page. It determines where it should be displayed on the page and where it should be displayed in a new course if the course is cloned.",
          "name": "position"
        },
        {
          "type": "timestamp",
          "description": "Date/Time when the assignment group was created.",
          "name": "created_at"
        },
        {
          "type": "timestamp",
          "description": "Date/Time when the assignment group was last updated.",
          "name": "updated_at"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "assignment_group_dim"
    },
    "assignment_group_fact": {
      "dw_type": "fact",
      "description": "Measures for assignment_groups.",
      "columns": [
        {
          "type": "bigint",
          "description": "Foreign key to the assignment group dimension table.",
          "name": "assignment_group_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the course to which the assignment group belongs to.",
          "name": "course_id",
          "dimension": {
            "name": "course",
            "id": "id",
            "role": "course"
          }
        },
        {
          "type": "double precision",
          "description": "Weight of the assignment group. Reflects the value populated in the '% of total grade' field in Canvas while creating the assignment group.",
          "name": "group_weight"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "assignment_group_fact"
    },
    "assignment_group_rule_dim": {
      "dw_type": "dimension",
      "description": "Rules associated with an assignment group.",
      "columns": [
        {
          "type": "bigint",
          "description": "Foreign key to the assignment group dimension table.",
          "name": "assignment_group_id"
        },
        {
          "type": "integer",
          "description": "Number of lowest scored assignments which can be dropped from the group. Set to '0' when none should be dropped. Defauts to '0'.",
          "name": "drop_lowest"
        },
        {
          "type": "integer",
          "description": "Number of highest scored assignments which can be dropped form the group. Set to '0' when none should be dropped. Defaults to '0'.",
          "name": "drop_highest"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "assignment_group_rule_dim"
    },
    "assignment_override_user_dim": {
      "description": "Table contains measures related to adhoc users for whom an assignment override exists.",
      "dw_type": "dimension",
      "columns": [
        {
          "type": "bigint",
          "description": "Unique surrogate ID for the assignment_override_student.",
          "name": "id"
        },
        {
          "type": "bigint",
          "description": "The ID of the user in the adhoc group table.",
          "name": "canvas_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the assignment the override is associated with.  May be empty.",
          "name": "assignment_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the assignment override dimension",
          "name": "assignment_override_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the quiz the override is associated with.  May be empty.",
          "name": "quiz_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the user.",
          "name": "user_id",
          "dimension": {
            "name": "user",
            "id": "id",
            "role": "user"
          }
        },
        {
          "type": "timestamp",
          "description": "Timestamp of when the assignment_override_student was created.",
          "name": "created_at"
        },
        {
          "type": "timestamp",
          "description": "Timestamp of when the assignment_override_student was last updated.",
          "name": "updated_at"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "assignment_override_user_dim"
    },
    "assignment_override_user_fact": {
      "description": "Table contains measures related to students for whom an assignment override exists.",
      "dw_type": "fact",
      "columns": [
        {
          "type": "bigint",
          "description": "Unique surrogate ID for the assignment_override_student. Is made up by adding a large number to the ID of the source table.",
          "name": "assignment_override_user_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the account associated with the course associated with this assignment.",
          "name": "account_id",
          "dimension": {
            "name": "account",
            "id": "id",
            "role": "account"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the assignment group dimension this fact is related to",
          "name": "assignment_group_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the assignment the override is associated with.  May be empty.",
          "name": "assignment_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the assignment override dimension this fact is related to",
          "name": "assignment_override_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the course associated with this assignment.",
          "name": "course_id",
          "dimension": {
            "name": "course",
            "id": "id",
            "role": "course"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign Key to enrollment term table.",
          "name": "enrollment_term_id",
          "dimension": {
            "name": "enrollment_term",
            "id": "id",
            "role": "enrollment_term"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the quiz the override is associated with.  May be empty.",
          "name": "quiz_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the user.",
          "name": "user_id",
          "dimension": {
            "name": "user",
            "id": "id",
            "role": "user"
          }
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "assignment_override_user_fact"
    },
    "assignment_override_dim": {
      "description": "Attributes for assignment_override.  There may be many records in this table for each assignment.  Use the data in this table to calculate actual due, all_day, lock and unlock dates/times.",
      "dw_type": "dimension",
      "columns": [
        {
          "type": "bigint",
          "description": "Unique surrogate ID for the assignment override.",
          "name": "id"
        },
        {
          "type": "bigint",
          "description": "Primary key for this record in the Canvas assignments table.",
          "name": "canvas_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the assignment the override is associated with.  May be empty.",
          "name": "assignment_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the course_section.",
          "name": "course_section_id",
          "dimension": {
            "name": "course_section",
            "id": "id",
            "role": "course_section"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the group.",
          "name": "group_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the quiz the override is associated with.",
          "name": "quiz_id"
        },
        {
          "type": "enum",
          "description": "Indicates if the all_day field overrides the original assignment.all_day field for this group of users. Possible values are 'new_all_day' and 'same_all_day'.",
          "name": "all_day"
        },
        {
          "type": "date",
          "description": "The new date version of the due date if the all_day flag is true.",
          "name": "all_day_date"
        },
        {
          "type": "int",
          "description": "The version of the assignment this override is applied too.",
          "name": "assignment_version"
        },
        {
          "type": "timestamp",
          "description": "Timestamp of when the assignment_override was created.",
          "name": "created_at"
        },
        {
          "type": "timestamp",
          "description": "The new due_at date-time for this group of users.",
          "name": "due_at"
        },
        {
          "type": "enum",
          "description": "Indicates if the due_at field overrides the original assignment.due_at field for this group of users. Possible values are 'new_due_at' and 'same_due_at'.",
          "name": "due_at_overridden"
        },
        {
          "type": "timestamp",
          "description": "The new lock_at date-time for this group of users.",
          "name": "lock_at"
        },
        {
          "type": "enum",
          "description": "Indicates if the lock_at field overrides the original assignment.lock_at field for this group of users. Possible values are 'new_lock_at' and 'same_lock_at'.",
          "name": "lock_at_overridden"
        },
        {
          "type": "enum",
          "description": "Used in conjunction with set_id, this field tells us what type of foreign relation is used. Possible values are 'course_section', 'group' and 'adhoc'.",
          "name": "set_type"
        },
        {
          "type": "text",
          "description": "The title for this assignment_override.",
          "name": "title"
        },
        {
          "type": "timestamp",
          "description": "The new unlock_at date-time for this group of users.",
          "name": "unlock_at"
        },
        {
          "type": "enum",
          "description": "Indicates if the unlock_at field overrides the original assignment.unlock_at field for this group of users. Possible values are 'new_unlock_at' and 'same_unlock_at'.",
          "name": "unlock_at_overridden"
        },
        {
          "type": "timestamp",
          "description": "Timestamp of when the assignment_override was last updated.",
          "name": "updated_at"
        },
        {
          "type": "int",
          "description": "The version of the quiz this override is applied too.",
          "name": "quiz_version"
        },
        {
          "type": "enum",
          "description": "Gives the workflow state of this record. Possible values are 'active' and 'deleted'.",
          "name": "workflow_state"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "assignment_override_dim"
    },
    "assignment_override_fact": {
      "description": "Table contains measures related to assignment overrides.  Overrides can be found in the assignment_override_dim.  Overrides are primarily the dates about the assigmnents for a given group of assignees.",
      "dw_type": "fact",
      "columns": [
        {
          "type": "bigint",
          "description": "Unique surrogate ID for the assignment_override.",
          "name": "assignment_override_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the account associated with the course associated with this assignment.",
          "name": "account_id",
          "dimension": {
            "name": "account",
            "id": "id",
            "role": "account"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the assignment the override is associated with.  May be empty.",
          "name": "assignment_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the assignment group dimension table.",
          "name": "assignment_group_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the course associated with this assignment.",
          "name": "course_id",
          "dimension": {
            "name": "course",
            "id": "id",
            "role": "course"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the course_section.",
          "name": "course_section_id",
          "dimension": {
            "name": "course_section",
            "id": "id",
            "role": "course_section"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign Key to enrollment term table.",
          "name": "enrollment_term_id",
          "dimension": {
            "name": "enrollment_term",
            "id": "id",
            "role": "enrollment_term"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the group.",
          "name": "group_id"
        },
        {
          "type": "bigint",
          "description": "(Not implemented) Foreign key to group category dimension table.",
          "name": "group_category_id"
        },
        {
          "type": "bigint",
          "description": "If the group is directly associated with an account, this is the id.",
          "name": "group_parent_account_id"
        },
        {
          "type": "bigint",
          "description": "The course ID for the original course if this course has been cross listed.",
          "name": "nonxlist_course_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the quiz the override is associated with.  May be empty.",
          "name": "quiz_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the wiki_dim table.",
          "name": "group_wiki_id"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "assignment_override_fact"
    },
    "assignment_override_user_rollup_fact": {
      "description": "Table contains measures related to students for whom an assignment override exists.  This table contains the user ids of users for whom an override was created.  There are 3 ways a user can be included, via an adhoc form, via a group membership, or a course section.  All three are included here.",
      "dw_type": "fact",
      "columns": [
        {
          "type": "bigint",
          "description": "Foreign key to the assignment the override is associated with.  May be empty.",
          "dimension": {
            "name": "assignment_dim",
            "id": "id"
          },
          "name": "assignment_id"
        },
        {
          "type": "bigint",
          "description": "The ID of the assignment_override for this override user.",
          "name": "assignment_override_id"
        },
        {
          "type": "bigint",
          "description": "When not empty, this field is the ID of the user in the adhoc group table.",
          "dimension": {
            "name": "assignment_override_student_adhoc_dim",
            "id": "assignment_override_student_adhoc_id"
          },
          "name": "assignment_override_user_adhoc_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the assignment group dimension table.",
          "name": "assignment_group_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the course associated with this assignment.",
          "name": "course_id",
          "dimension": {
            "name": "course",
            "id": "id",
            "role": "course"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the account associated with the course associated with this assignment.",
          "dimension": {
            "name": "account_dim",
            "id": "id"
          },
          "name": "course_account_id"
        },
        {
          "type": "bigint",
          "description": "When not empty, this field is the ID of the course_section the user is part of.",
          "name": "course_section_id",
          "dimension": {
            "name": "course_section",
            "id": "id",
            "role": "course_section"
          }
        },
        {
          "type": "bigint",
          "description": "When not empty, this field is the ID of the enrollment for a course section.",
          "name": "enrollment_id"
        },
        {
          "type": "bigint",
          "description": "Foreign Key to enrollment term table.",
          "name": "enrollment_term_id",
          "dimension": {
            "name": "enrollment_term",
            "id": "id",
            "role": "enrollment_term"
          }
        },
        {
          "type": "bigint",
          "description": "When not empty, this field is the ID of the group category the user is part of.",
          "name": "group_category_id"
        },
        {
          "type": "bigint",
          "description": "When not empty, this field is the ID of the group the user is part of.",
          "name": "group_id"
        },
        {
          "type": "bigint",
          "description": "If the group is directly associated with an account, this is the id.",
          "name": "group_parent_account_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the wiki_dim table.",
          "name": "group_wiki_id"
        },
        {
          "type": "bigint",
          "description": "The course ID for the original course if this course has been cross listed.",
          "name": "nonxlist_course_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the quiz the override is associated with.  May be empty.",
          "dimension": {
            "name": "quiz_dim",
            "id": "id"
          },
          "name": "quiz_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the user.",
          "dimension": {
            "name": "user",
            "id": "id"
          },
          "name": "user_id"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "assignment_override_user_rollup_fact"
    },
    "communication_channel_dim": {
      "dw_type": "dimension",
      "description": "Attributes for communication channel.",
      "columns": [
        {
          "type": "bigint",
          "description": "Unique surrogate ID for the communication channel.",
          "name": "id"
        },
        {
          "type": "bigint",
          "description": "Primary key for this communication channel in the communication_channel table.",
          "name": "canvas_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the user that owns this communication channel.",
          "name": "user_id",
          "dimension": {
            "name": "user",
            "id": "id",
            "role": "user"
          }
        },
        {
          "type": "varchar",
          "description": "Address, or path, of the communication channel. Set to 'NULL' for push notifications.",
          "name": "address",
          "length": 256
        },
        {
          "type": "varchar",
          "description": "Denotes the type of the path. Possible values are 'email', 'facebook', 'push' (device push notifications), 'sms' and 'twitter'. Defaults to 'email'.",
          "name": "type",
          "length": 256
        },
        {
          "type": "integer",
          "description": "Position of this communication channel relative to the user's other channels when they are ordered.",
          "name": "position"
        },
        {
          "type": "varchar",
          "description": "Current state of the communication channel. Possible values are 'unconfirmed' and 'active'.",
          "name": "workflow_state",
          "length": 256
        },
        {
          "type": "timestamp",
          "description": "Date/Time when the quiz was created.",
          "name": "created_at"
        },
        {
          "type": "timestamp",
          "description": "Date/Time when the quiz was last updated.",
          "name": "updated_at"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "communication_channel_dim"
    },
    "communication_channel_fact": {
      "dw_type": "fact",
      "description": "Measures for communication channel.",
      "columns": [
        {
          "type": "bigint",
          "description": "Foreign key to the communication channel dimension table.",
          "name": "communication_channel_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the user that owns this communication channel.",
          "name": "user_id",
          "dimension": {
            "name": "user",
            "id": "id",
            "role": "user"
          }
        },
        {
          "type": "integer",
          "description": "Number of permanent bounces since the channel was last reset. If it's greater than 0, then no email is sent to the channel, until it is either reset by a siteadmin or it is removed and re-added by a user.",
          "name": "bounce_count"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "communication_channel_fact"
    },
    "conversation": {
      "dw_type": "dimension",
      "description": "Attributes for a conversation",
      "columns": [
        {
          "type": "bigint",
          "description": "Unique surrogate id for the conversation.",
          "name": "id"
        },
        {
          "type": "bigint",
          "description": "Original primary key for conversation in the Canvas table",
          "name": "canvas_id"
        },
        {
          "type": "boolean",
          "description": "True if the conversation has attachments",
          "name": "has_attachments"
        },
        {
          "type": "boolean",
          "description": "True if the conversation has media objects",
          "name": "has_media_objects"
        },
        {
          "description": "The subject of the conversation",
          "name": "subject",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "bigint",
          "description": "The course that owns this conversation",
          "name": "course_id",
          "dimension": {
            "name": "course",
            "id": "id",
            "role": "course"
          }
        },
        {
          "type": "bigint",
          "description": "The group that owns this conversation",
          "name": "group_id"
        },
        {
          "type": "bigint",
          "description": "The account this owns this conversation",
          "name": "account_id",
          "dimension": {
            "name": "account",
            "id": "id",
            "role": "account"
          }
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "conversation_dim"
    },
    "conversation_message": {
      "dw_type": "dimension",
      "description": "Attributes for a message in a conversation",
      "columns": [
        {
          "type": "bigint",
          "description": "Unique surrogate id for the message.",
          "name": "id"
        },
        {
          "type": "bigint",
          "description": "Original ID for canvas table.",
          "name": "canvas_id"
        },
        {
          "type": "bigint",
          "description": "Parent conversation for this message.",
          "name": "conversation_id",
          "dimension": {
            "name": "conversation",
            "id": "id",
            "role": "conversation"
          }
        },
        {
          "type": "bigint",
          "description": "User id of the author of the message.",
          "dimension": {
            "name": "user_dim",
            "id": "id"
          },
          "name": "author_id"
        },
        {
          "type": "timestamp",
          "description": "Date and time this message was created.",
          "name": "created_at"
        },
        {
          "type": "boolean",
          "description": "This attribute is true if the system generated this message (e.g. \"John was added to this conversation\")",
          "name": "generated"
        },
        {
          "type": "boolean",
          "description": "True if the message has attachments.",
          "name": "has_attachments"
        },
        {
          "type": "boolean",
          "description": "True if the message has media objects.",
          "name": "has_media_objects"
        },
        {
          "type": "text",
          "description": "The content of the message.",
          "name": "body"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "conversation_message_dim"
    },
    "conversation_message_participant": {
      "dw_type": "fact",
      "description": "Fact table for each message in a conversation and each participant",
      "columns": [
        {
          "type": "bigint",
          "description": "Foreign key to the message dimension for the associated message.",
          "name": "conversation_message_id",
          "dimension": {
            "name": "conversation_message",
            "id": "id",
            "role": "conversation_message"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the conversation dimension for the associated conversation",
          "name": "conversation_id",
          "dimension": {
            "name": "conversation",
            "id": "id",
            "role": "conversation"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the user dimension for the associated user",
          "name": "user_id",
          "dimension": {
            "name": "user",
            "id": "id",
            "role": "user"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the course dimension for the associated course.",
          "name": "course_id",
          "dimension": {
            "name": "course",
            "id": "id",
            "role": "course"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign Key to enrollment term table",
          "name": "enrollment_term_id",
          "dimension": {
            "name": "enrollment_term",
            "id": "id",
            "role": "enrollment_term"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign Key to the course's account",
          "dimension": {
            "name": "account_dim",
            "id": "id"
          },
          "name": "course_account_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the group dimension for a particular group",
          "name": "group_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to account_dim",
          "name": "account_id",
          "dimension": {
            "name": "account",
            "id": "id",
            "role": "account"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the enrollment roll-up dimension table",
          "name": "enrollment_rollup_id",
          "dimension": {
            "name": "enrollment_rollup",
            "id": "id",
            "role": "enrollment_rollup"
          }
        },
        {
          "type": "int",
          "description": "The message size in bytes.",
          "name": "message_size_bytes"
        },
        {
          "type": "int",
          "description": "The message size in characters.",
          "name": "message_character_count"
        },
        {
          "type": "int",
          "description": "The message size in words using space and common punctuation as word breaks.",
          "name": "message_word_count"
        },
        {
          "type": "int",
          "description": "The number of lines in a message.",
          "name": "message_line_count"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "conversation_message_participant_fact"
    },
    "discussion_topic_dim": {
      "description": "Attributes for discussion topics in Canvas.  Discussion topics are logical discussion threads.  They can have many discussion entries.   They also have their own message text for the message that started the topic.",
      "dw_type": "dimension",
      "columns": [
        {
          "type": "bigint",
          "description": "Unique surrogate id for the discussion topic.",
          "name": "id"
        },
        {
          "type": "bigint",
          "description": "Primary key to the discussion_topics table in Canvas",
          "name": "canvas_id"
        },
        {
          "description": "Title of the discussion topic",
          "name": "title",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "text",
          "description": "Message text for the discussion topic.",
          "name": "message"
        },
        {
          "description": "Discussion topic type.  Two types are default (blank) and announcement.",
          "name": "type",
          "type": "varchar",
          "length": 256
        },
        {
          "description": "Workflow state for this discussion topic.  Valid states are unpublished, active, locked, deleted, and post_delayed",
          "name": "workflow_state",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "timestamp",
          "description": "Timestamp of the last reply to this topic.",
          "name": "last_reply_at"
        },
        {
          "type": "timestamp",
          "description": "Timestamp when the discussion topic was first saved in the system.",
          "name": "created_at"
        },
        {
          "type": "timestamp",
          "description": "Timestamp when the discussion topic was last updated in the system.",
          "name": "updated_at"
        },
        {
          "type": "timestamp",
          "description": "Timestamp when the discussion topic was/will be delay-posted",
          "name": "delayed_post_at"
        },
        {
          "type": "timestamp",
          "description": "Timestamp when the discussion topic was posted",
          "name": "posted_at"
        },
        {
          "type": "timestamp",
          "description": "Timestamp when the discussion topic was deleted.",
          "name": "deleted_at"
        },
        {
          "description": "Type of discussion topic: default(blank), side_comment, threaded.  threaded indicates that replies are threaded where side_comment indicates that replies in the discussion are flat.  See related Canvas Guide https://guides.instructure.com/m/4152/l/60423-how-do-i-create-a-threaded-discussion",
          "name": "discussion_type",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "boolean",
          "description": "True if the discussion topic has been pinned",
          "name": "pinned"
        },
        {
          "type": "boolean",
          "description": "True if the discussion topic has been locked",
          "name": "locked"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the course dimension",
          "name": "course_id",
          "dimension": {
            "name": "course",
            "id": "id",
            "role": "course"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the group dimension",
          "name": "group_id"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "discussion_topic_dim"
    },
    "discussion_topic_fact": {
      "dw_type": "fact",
      "description": "Measures for discussion topics/threads.",
      "columns": [
        {
          "type": "bigint",
          "description": "Foreign key to the discussion topic dimension for the associated discussion topic.",
          "name": "discussion_topic_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the course dimension",
          "name": "course_id",
          "dimension": {
            "name": "course",
            "id": "id",
            "role": "course"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign Key to enrollment term table",
          "name": "enrollment_term_id",
          "dimension": {
            "name": "enrollment_term",
            "id": "id",
            "role": "enrollment_term"
          }
        },
        {
          "type": "bigint",
          "description": "(currently un-populated) Foreign key to the account dimension for the account associated with the associated course",
          "dimension": {
            "name": "account_dim",
            "id": "id"
          },
          "name": "course_account_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the user dimension for the user that created the discussion topic.",
          "name": "user_id",
          "dimension": {
            "name": "user",
            "id": "id",
            "role": "user"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the assignment dimension",
          "name": "assignment_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the user to last edit the entry, if different than user_id",
          "dimension": {
            "name": "user_dim",
            "id": "id"
          },
          "name": "editor_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the enrollment roll-up dimension table",
          "name": "enrollment_rollup_id",
          "dimension": {
            "name": "enrollment_rollup",
            "id": "id",
            "role": "enrollment_rollup"
          }
        },
        {
          "type": "int",
          "description": "Best guess at the count of characters in the message. Special characters are treated differently in different systems. As a result, you may find variance in message length in your own systems. NULL messages are mapped to 0 length.",
          "name": "message_length"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the group dimension",
          "name": "group_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to course dimension.",
          "dimension": {
            "name": "course_dim",
            "id": "id"
          },
          "name": "group_parent_course_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to accounts table.",
          "dimension": {
            "name": "account_dim",
            "id": "id"
          },
          "name": "group_parent_account_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the account dimension for the account associated with the course to which the group belongs to.",
          "dimension": {
            "name": "account_dim",
            "id": "id"
          },
          "name": "group_parent_course_account_id"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "discussion_topic_fact"
    },
    "discussion_entry_dim": {
      "description": "Attributes for discussion entries. Discussion entries are replies in a discussion topic.",
      "dw_type": "dimension",
      "columns": [
        {
          "type": "bigint",
          "description": "Unique surrogate id for the discussion entry.",
          "name": "id"
        },
        {
          "type": "bigint",
          "description": "Primary key for this record in the Canvas discussion_entries table",
          "name": "canvas_id"
        },
        {
          "type": "text",
          "description": "Full text of the entry's message",
          "name": "message"
        },
        {
          "description": "Workflow state for discussion message (values: deleted, active)",
          "name": "workflow_state",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "timestamp",
          "description": "Timestamp when the discussion entry was created.",
          "name": "created_at"
        },
        {
          "type": "timestamp",
          "description": "Timestamp when the discussion entry was updated.",
          "name": "updated_at"
        },
        {
          "type": "timestamp",
          "description": "Timestamp when the discussion entry was deleted.",
          "name": "deleted_at"
        },
        {
          "type": "int",
          "description": "Reply depth for this entry",
          "name": "depth"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "discussion_entry_dim"
    },
    "discussion_entry_fact": {
      "dw_type": "fact",
      "description": "Measures for discussion entries.  Discussion entries are replies in a discussion topic.",
      "columns": [
        {
          "type": "bigint",
          "description": "Foreign key to this entries attributes.",
          "name": "discussion_entry_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the reply that it is nested underneath.",
          "name": "parent_discussion_entry_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the user that created this entry.",
          "name": "user_id",
          "dimension": {
            "name": "user",
            "id": "id",
            "role": "user"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to associated discussion topic.",
          "dimension": {
            "name": "discussion_topic_dim",
            "id": "id"
          },
          "name": "topic_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to associated course.",
          "name": "course_id",
          "dimension": {
            "name": "course",
            "id": "id",
            "role": "course"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign Key to enrollment term table",
          "name": "enrollment_term_id",
          "dimension": {
            "name": "enrollment_term",
            "id": "id",
            "role": "enrollment_term"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to account for associated course.",
          "dimension": {
            "name": "account_dim",
            "id": "id"
          },
          "name": "course_account_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to user that posted the associated discussion topic.",
          "dimension": {
            "name": "user_dim",
            "id": "id"
          },
          "name": "topic_user_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to assignment associated with the entry's discussion topic.",
          "dimension": {
            "name": "assignment_dim",
            "id": "id"
          },
          "name": "topic_assignment_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to editor associated with the entry's discussion topic.",
          "dimension": {
            "name": "user_dim",
            "id": "id"
          },
          "name": "topic_editor_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the enrollment roll-up dimension table",
          "name": "enrollment_rollup_id",
          "dimension": {
            "name": "enrollment_rollup",
            "id": "id",
            "role": "enrollment_rollup"
          }
        },
        {
          "type": "int",
          "description": "Length of the message in bytes",
          "name": "message_length"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "discussion_entry_fact"
    },
    "enrollment_term": {
      "dw_type": "dimension",
      "description": "Enrollment term describes the term or semester associated with courses (e.g. Fall 2013)",
      "columns": [
        {
          "type": "bigint",
          "description": "Unique surrogate id for the enrollment term.",
          "name": "id"
        },
        {
          "type": "bigint",
          "description": "Primary key for this record in the Canvas enrollments table.",
          "name": "canvas_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the root account for this enrollment term",
          "name": "root_account_id"
        },
        {
          "description": "Name of the enrollment term",
          "name": "name",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "timestamp",
          "description": "Term start date",
          "name": "date_start"
        },
        {
          "type": "timestamp",
          "description": "Term end date",
          "name": "date_end"
        },
        {
          "description": "Correlated SIS id for this enrollment term (assuming SIS has been configured properly)",
          "name": "sis_source_id",
          "type": "varchar",
          "length": 256
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "enrollment_term_dim"
    },
    "course_section": {
      "dw_type": "dimension",
      "description": "Attributes for a section of a course",
      "columns": [
        {
          "type": "bigint",
          "description": "Unique surrogate id for the course section.",
          "name": "id"
        },
        {
          "type": "bigint",
          "description": "Primary key for this record in the Canvas course_sections table.",
          "name": "canvas_id"
        },
        {
          "description": "Name of the section",
          "name": "name",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "bigint",
          "description": "Foreign key to the associated course",
          "name": "course_id",
          "dimension": {
            "name": "course",
            "id": "id",
            "role": "course"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the associated enrollment term",
          "name": "enrollment_term_id",
          "dimension": {
            "name": "enrollment_term",
            "id": "id",
            "role": "enrollment_term"
          }
        },
        {
          "type": "boolean",
          "description": "True if this is the default section",
          "name": "default_section"
        },
        {
          "type": "boolean",
          "description": "True if this section is open for enrollment",
          "name": "accepting_enrollments"
        },
        {
          "type": "boolean",
          "description": "Deprecated",
          "name": "can_manually_enroll"
        },
        {
          "type": "timestamp",
          "description": "Section start date",
          "name": "start_at"
        },
        {
          "type": "timestamp",
          "description": "Section end date",
          "name": "end_at"
        },
        {
          "type": "timestamp",
          "description": "Timestamp for when this section was entered into the system.",
          "name": "created_at"
        },
        {
          "type": "timestamp",
          "description": "Timestamp for when the last time the section was updated",
          "name": "updated_at"
        },
        {
          "description": "Life-cycle state for section. (active, deleted)",
          "name": "workflow_state",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "boolean",
          "description": "True when \"Users can only participate in the course between these dates\" is checked",
          "name": "restrict_enrollments_to_section_dates"
        },
        {
          "type": "bigint",
          "description": "The course id for the original course if this course has been cross listed",
          "name": "nonxlist_course_id"
        },
        {
          "description": "Id for the correlated record for the section in the SIS (assuming SIS integration has been properly configured)",
          "name": "sis_source_id",
          "type": "varchar",
          "length": 256
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "course_section_dim"
    },
    "role_dim": {
      "dw_type": "dimension",
      "description": "Give the possible roles for an enrolled user",
      "columns": [
        {
          "type": "bigint",
          "description": "Unique surrogate id for the role.",
          "name": "id"
        },
        {
          "type": "bigint",
          "description": "Primary key for this record in the Canvas roles table",
          "name": "canvas_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the account dimension for this role's root account.",
          "name": "root_account_id"
        },
        {
          "type": "bigint",
          "description": "The foreign key to the account that is in the role",
          "name": "account_id",
          "dimension": {
            "name": "account",
            "id": "id",
            "role": "account"
          }
        },
        {
          "description": "The name of role, previously was \"role_name\" on the enrollments_dim",
          "name": "name",
          "type": "varchar",
          "length": 256
        },
        {
          "description": "The built in type this role is based on.",
          "name": "base_role_type",
          "type": "varchar",
          "length": 256
        },
        {
          "description": "Workflow status indicating that the role is [deleted] or [inactive]",
          "name": "workflow_state",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "timestamp",
          "description": "Timestamp of the first time the role was entered into the system",
          "name": "created_at"
        },
        {
          "type": "timestamp",
          "description": "Timestamp of the last time the role was updated",
          "name": "updated_at"
        },
        {
          "type": "timestamp",
          "description": "Timestamp of when the role was removed from the system",
          "name": "deleted_at"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "role_dim"
    },
    "enrollment_dim": {
      "dw_type": "dimension",
      "description": "An enrollment represents a user's association with a specific course and section",
      "columns": [
        {
          "type": "bigint",
          "description": "Unique surrogate id for the enrollment.",
          "name": "id"
        },
        {
          "type": "bigint",
          "description": "Primary key for this record in the Canvas enrollments table",
          "name": "canvas_id"
        },
        {
          "type": "bigint",
          "description": "Root account id associated with this enrollment",
          "name": "root_account_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the course section for this enrollment",
          "name": "course_section_id",
          "dimension": {
            "name": "course_section",
            "id": "id",
            "role": "course_section"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the role of the person enrolled in the course",
          "name": "role_id"
        },
        {
          "description": "Enrollment type: TaEnrollment, DesignerEnrollment, StudentEnrollment, TeacherEnrollment, StudentViewEnrollment, ObserverEnrollment",
          "name": "type",
          "type": "varchar",
          "length": 256
        },
        {
          "description": "Workflow state for enrollment: active, completed, rejected, deleted, invited, creation_pending",
          "name": "workflow_state",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "timestamp",
          "description": "Timestamp for when this section was entered into the system.",
          "name": "created_at"
        },
        {
          "type": "timestamp",
          "description": "Timestamp for when the last time the section was updated",
          "name": "updated_at"
        },
        {
          "type": "timestamp",
          "description": "Enrollment start date",
          "name": "start_at"
        },
        {
          "type": "timestamp",
          "description": "Enrollment end date",
          "name": "end_at"
        },
        {
          "type": "timestamp",
          "description": "Enrollment completed date",
          "name": "completed_at"
        },
        {
          "type": "boolean",
          "description": "Enrollment was created via self-enrollment",
          "name": "self_enrolled"
        },
        {
          "description": "(Deprecated) No longer used in Canvas.",
          "name": "sis_source_id",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "bigint",
          "description": "Foreign key to course for this enrollment",
          "name": "course_id",
          "dimension": {
            "name": "course",
            "id": "id",
            "role": "course"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to user for the enrollment",
          "name": "user_id",
          "dimension": {
            "name": "user",
            "id": "id",
            "role": "user"
          }
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "enrollment_dim"
    },
    "enrollment_fact": {
      "dw_type": "fact",
      "description": "Measures for enrollments",
      "columns": [
        {
          "type": "bigint",
          "description": "Foreign key for the attributes of the enrollment",
          "name": "enrollment_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the enrolled user",
          "name": "user_id",
          "dimension": {
            "name": "user",
            "id": "id",
            "role": "user"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the enrolled course",
          "name": "course_id",
          "dimension": {
            "name": "course",
            "id": "id",
            "role": "course"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the enrollment term table",
          "name": "enrollment_term_id",
          "dimension": {
            "name": "enrollment_term",
            "id": "id",
            "role": "enrollment_term"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the account of the enrolled course",
          "dimension": {
            "name": "account_dim",
            "id": "id"
          },
          "name": "course_account_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the enrolled section",
          "name": "course_section_id",
          "dimension": {
            "name": "course_section",
            "id": "id",
            "role": "course_section"
          }
        },
        {
          "type": "double precision",
          "description": "(Deprecated Jan-28-2017) Scores have migrated to the score_fact table.  An effort is made to back fill scores from the scores table into this table.  No guarantees offered.",
          "name": "computed_final_score"
        },
        {
          "type": "double precision",
          "description": "(Deprecated Jan-28-2017) Scores have migrated to the score_fact table.  An effort is made to back fill scores from the scores table into this table.  No guarantees offered.",
          "name": "computed_current_score"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "enrollment_fact"
    },
    "enrollment_rollup": {
      "dw_type": "dimension",
      "description": "Would be an empty table. Roll-up aggregating the roles held by the users in the courses they are associated with.",
      "columns": [
        {
          "type": "bigint",
          "description": "Unique surrogate id for the user and the course.",
          "name": "id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the enrolled user.",
          "name": "user_id",
          "dimension": {
            "name": "user",
            "id": "id",
            "role": "user"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the enrolled course.",
          "name": "course_id",
          "dimension": {
            "name": "course",
            "id": "id",
            "role": "course"
          }
        },
        {
          "type": "int",
          "description": "Total number of enrollments associated with the user in the course for his/her all roles under all base roles, duplicate or not.",
          "name": "enrollment_count"
        },
        {
          "type": "int",
          "description": "Total number of unique roles associated with the user in the course.",
          "name": "role_count"
        },
        {
          "type": "int",
          "description": "Total number of unique base roles associated with the user in the course.",
          "name": "base_role_count"
        },
        {
          "type": "int",
          "description": "Total number of 'AccountAdmin' roles associated with the user in the course.",
          "name": "account_admin_role_count"
        },
        {
          "type": "int",
          "description": "Total number of 'TeacherEnrollment' roles associated with the user in the course.",
          "name": "teacher_enrollment_role_count"
        },
        {
          "type": "int",
          "description": "Total number of 'DesignerEnrollment' roles associated with the user in the course.",
          "name": "designer_enrollment_role_count"
        },
        {
          "type": "int",
          "description": "Total number of 'TaEnrollment' roles associated with the user in the course.",
          "name": "ta_enrollment_role_count"
        },
        {
          "type": "int",
          "description": "Total number of 'StudentEnrollment' roles associated with the user in the course.",
          "name": "student_enrollment_role_count"
        },
        {
          "type": "int",
          "description": "Total number of 'ObserverEnrollment' roles associated with the user in the course.",
          "name": "observer_enrollment_role_count"
        },
        {
          "type": "int",
          "description": "Total number of 'AccountMembership' roles associated with the user in the course.",
          "name": "account_membership_role_count"
        },
        {
          "type": "int",
          "description": "Total number of 'NoPermissions' roles associated with the user in the course.",
          "name": "no_permissions_role_count"
        },
        {
          "type": "bigint",
          "description": "Enrollment ID if this a valid role for the user in the course, else NULL.",
          "name": "account_admin_enrollment_id"
        },
        {
          "type": "bigint",
          "description": "Enrollment ID if this a valid role for the user in the course, else NULL.",
          "name": "teacher_enrollment_enrollment_id"
        },
        {
          "type": "bigint",
          "description": "Enrollment ID if this a valid role for the user in the course, else NULL.",
          "name": "designer_enrollment_enrollment_id"
        },
        {
          "type": "bigint",
          "description": "Enrollment ID if this a valid role for the user in the course, else NULL.",
          "name": "ta_enrollment_enrollment_id"
        },
        {
          "type": "bigint",
          "description": "Enrollment ID if this a valid role for the user in the course, else NULL.",
          "name": "student_enrollment_enrollment_id"
        },
        {
          "type": "bigint",
          "description": "Enrollment ID if this a valid role for the user in the course, else NULL.",
          "name": "observer_enrollment_enrollment_id"
        },
        {
          "type": "bigint",
          "description": "Enrollment ID if this a valid role for the user in the course, else NULL.",
          "name": "account_membership_enrollment_id"
        },
        {
          "type": "bigint",
          "description": "Enrollment ID if this a valid role for the user in the course, else NULL.",
          "name": "no_permissions_enrollment_id"
        },
        {
          "description": "The most privileged role associated with the user in the course.",
          "name": "most_privileged_role",
          "type": "varchar",
          "length": 256
        },
        {
          "description": "The least privileged role associated with the user in the course.",
          "name": "least_privileged_role",
          "type": "varchar",
          "length": 256
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "enrollment_rollup_dim"
    },
    "score_fact": {
      "dw_type": "fact",
      "description": "Table containing measures for scores within Canvas gradebook.",
      "columns": [
        {
          "type": "bigint",
          "description": "Unique surrogate identifier for the score.",
          "name": "score_id"
        },
        {
          "type": "bigint",
          "description": "Primary key for the score.",
          "name": "canvas_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the Account group table.",
          "name": "account_id",
          "dimension": {
            "name": "account",
            "id": "id",
            "role": "account"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the Course group table.",
          "name": "course_id",
          "dimension": {
            "name": "course",
            "id": "id",
            "role": "course"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the Enrollment table.",
          "name": "enrollment_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the grading period group table.",
          "name": "grading_period_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the grading period group table.",
          "name": "grading_period_group_id"
        },
        {
          "type": "bigint",
          "description": "One hop ID to the Account table for the grading period group table.",
          "name": "grading_period_group_account_id"
        },
        {
          "type": "double precision",
          "description": "Current score.",
          "name": "current_score"
        },
        {
          "type": "double precision",
          "description": "Final score.",
          "name": "final_score"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "score_fact"
    },
    "score_dim": {
      "dw_type": "dimension",
      "description": "Attributes for scores. You can think of a score as synonymous with a cell inside the gradebook.",
      "columns": [
        {
          "type": "bigint",
          "description": "Unique surrogate identifier for the  score.",
          "name": "id"
        },
        {
          "type": "bigint",
          "description": "Primary key for the score.",
          "name": "canvas_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the Enrollment table.",
          "name": "enrollment_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the grading period group table.",
          "name": "grading_period_id"
        },
        {
          "type": "timestamp",
          "description": "Timestamp when record was created.",
          "name": "created_at"
        },
        {
          "type": "timestamp",
          "description": "Timestamp when record was last updated.",
          "name": "updated_at"
        },
        {
          "description": "workflow state for the score.  Possibe values are 'active', 'deleted'",
          "name": "workflow_state",
          "type": "varchar",
          "length": 256
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "score_dim"
    },
    "grading_period_fact": {
      "dw_type": "fact",
      "description": "Measures for grading periods.",
      "columns": [
        {
          "type": "bigint",
          "description": "Unique surrogate identifier for the  grading period.",
          "name": "grading_period_id"
        },
        {
          "type": "bigint",
          "description": "Primary key for the grading period.",
          "name": "canvas_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the grading period group table.",
          "name": "grading_period_group_id"
        },
        {
          "type": "bigint",
          "description": "One hop ID to the Account table for the grading period group",
          "name": "grading_period_group_account_id"
        },
        {
          "type": "bigint",
          "description": "One hop ID to the Course table for the grading period group",
          "name": "grading_period_group_course_id"
        },
        {
          "type": "double precision",
          "description": "A weight value that contributes to the overall weight of a grading period set which is used to calculate how much assignments in this period contribute to the total grade.",
          "name": "weight"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "grading_period_fact"
    },
    "grading_period_dim": {
      "dw_type": "dimension",
      "description": "Attributes for grading period. A Grading period is like a \"term\", essentially used for splitting up the gradebook into \"periods\"",
      "columns": [
        {
          "type": "bigint",
          "description": "Unique surrogate identifier for the  grading period.",
          "name": "id"
        },
        {
          "type": "bigint",
          "description": "Primary key for the grading period.",
          "name": "canvas_id"
        },
        {
          "type": "bigint",
          "description": "Surrogate ID to the grading period group table.",
          "name": "grading_period_group_id"
        },
        {
          "type": "timestamp",
          "description": "Grades can only be changed before the close date of the grading period.",
          "name": "close_date"
        },
        {
          "type": "timestamp",
          "description": "Timestamp when record was created",
          "name": "created_at"
        },
        {
          "type": "timestamp",
          "description": "End date of the grading period.",
          "name": "end_date"
        },
        {
          "type": "timestamp",
          "description": "Start date of the grading period.",
          "name": "start_date"
        },
        {
          "description": "Title for the grading period.",
          "name": "title",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "timestamp",
          "description": "Timestamp when record was last updated.",
          "name": "updated_at"
        },
        {
          "description": "current workflow state. Possibe values are 'active', 'deleted'",
          "name": "workflow_state",
          "type": "varchar",
          "length": 256
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "grading_period_dim"
    },
    "grading_period_group_dim": {
      "dw_type": "dimension",
      "description": "Attributes for grading period groups. Which are a group of grading periods.",
      "columns": [
        {
          "type": "bigint",
          "description": "Unique surrogate identifier for the grading period groups",
          "name": "id"
        },
        {
          "type": "bigint",
          "description": "Primary key for the grading period groups",
          "name": "canvas_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the Course table.",
          "name": "course_id",
          "dimension": {
            "name": "course",
            "id": "id",
            "role": "course"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the Account table.",
          "name": "account_id",
          "dimension": {
            "name": "account",
            "id": "id",
            "role": "account"
          }
        },
        {
          "type": "timestamp",
          "description": "Timestamp when record was created.",
          "name": "created_at"
        },
        {
          "description": "Title for the grading period group.",
          "name": "title",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "timestamp",
          "description": "Timestamp when record was last updated.",
          "name": "updated_at"
        },
        {
          "description": "Workflow state for the grading period group. Possibe values are 'active', 'deleted'",
          "name": "workflow_state",
          "type": "varchar",
          "length": 256
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "grading_period_group_dim"
    },
    "file_dim": {
      "dw_type": "dimension",
      "description": "Attributes for files.",
      "columns": [
        {
          "type": "bigint",
          "description": "Unique surrogate ID for this file.",
          "name": "id"
        },
        {
          "type": "bigint",
          "description": "Primary key for this file in the attachments table.",
          "name": "canvas_id"
        },
        {
          "type": "text",
          "description": "Name of this file.",
          "name": "display_name"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the account this file belongs to.",
          "name": "account_id",
          "dimension": {
            "name": "account",
            "id": "id",
            "role": "account"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the assignment this file belongs to.",
          "name": "assignment_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the conversation message this file belongs to.",
          "name": "conversation_message_id",
          "dimension": {
            "name": "conversation_message",
            "id": "id",
            "role": "conversation_message"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the course this file belongs to.",
          "name": "course_id",
          "dimension": {
            "name": "course",
            "id": "id",
            "role": "course"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the folder this file belongs to.",
          "name": "folder_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the group this file belongs to.",
          "name": "group_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the quiz this file belongs to.",
          "name": "quiz_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the quiz submission this file belongs to.",
          "name": "quiz_submission_id"
        },
        {
          "type": "bigint",
          "description": "ID of the overwriting file if this file is overwritten.",
          "name": "replacement_file_id"
        },
        {
          "type": "bigint",
          "description": "ID of the source file from which this file was copied and created. Set to 'NULL' when this is the only copy.",
          "name": "root_file_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the submission this file belongs to.",
          "name": "submission_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the user who uploaded this file. Might contain users which are not in the user dimension table.",
          "dimension": {
            "name": "user_dim",
            "id": "id"
          },
          "name": "uploader_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the user this file belongs to.",
          "name": "user_id",
          "dimension": {
            "name": "user",
            "id": "id",
            "role": "user"
          }
        },
        {
          "type": "enum",
          "description": "Table this file is associated with. Possible values are 'account', 'assignment', 'conversation_message', 'course', 'group', 'quiz', 'quiz_submission', 'submission' and 'user'.",
          "name": "owner_entity_type"
        },
        {
          "type": "varchar",
          "description": "Contains the MIME type of this file.",
          "name": "content_type",
          "length": 256
        },
        {
          "type": "varchar",
          "description": "Contains the MD5 checksum of the contents of this file.",
          "name": "md5",
          "length": 256
        },
        {
          "type": "enum",
          "description": "Denotes the current state of this file. Possible values are 'available', 'broken', 'deleted', 'errored' and 'hidden'.",
          "name": "file_state"
        },
        {
          "type": "enum",
          "description": "Dictates if the quiz can be locked or not. Possible values are 'allow_locking' and 'disallow_locking'.",
          "name": "could_be_locked"
        },
        {
          "type": "enum",
          "description": "Denotes the current lock status of this file. Possible values are 'is_locked' and 'is_not_locked'.",
          "name": "locked"
        },
        {
          "type": "timestamp",
          "description": "Date/Time when this file is to be locked.",
          "name": "lock_at"
        },
        {
          "type": "timestamp",
          "description": "Date/Time when this file is to unlocked.",
          "name": "unlock_at"
        },
        {
          "type": "timestamp",
          "description": "Date/Time when this file was last viewed.",
          "name": "viewed_at"
        },
        {
          "type": "timestamp",
          "description": "Date/Time when this file was created.",
          "name": "created_at"
        },
        {
          "type": "timestamp",
          "description": "Date/Time when this file was last updated.",
          "name": "updated_at"
        },
        {
          "type": "timestamp",
          "description": "Date/Time when this file was deleted.",
          "name": "deleted_at"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "file_dim"
    },
    "file_fact": {
      "dw_type": "fact",
      "description": "Measures for files.",
      "columns": [
        {
          "type": "bigint",
          "description": "Foreign key to this file dimesion table.",
          "name": "file_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the account this file belongs to.",
          "name": "account_id",
          "dimension": {
            "name": "account",
            "id": "id",
            "role": "account"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the assignment, the quiz/quiz submission/submission associated with this file belongs to.",
          "name": "assignment_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the assignment group, the assignment/submission associated with this file belongs to.",
          "name": "assignment_group_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the conversation, the conversation message associated with this file belongs to.",
          "name": "conversation_id",
          "dimension": {
            "name": "conversation",
            "id": "id",
            "role": "conversation"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the user, who authored the conversation message this file belongs to.",
          "dimension": {
            "name": "user_dim",
            "id": "id"
          },
          "name": "conversation_message_author_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the conversation message this file belongs to.",
          "name": "conversation_message_id",
          "dimension": {
            "name": "conversation_message",
            "id": "id",
            "role": "conversation_message"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the course, the assignment/quiz/quiz submission/submission associated with this file belongs to.",
          "name": "course_id",
          "dimension": {
            "name": "course",
            "id": "id",
            "role": "course"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the enrollment roll-up, the quiz submission/submission associated with this file belongs to.",
          "name": "enrollment_rollup_id",
          "dimension": {
            "name": "enrollment_rollup",
            "id": "id",
            "role": "enrollment_rollup"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign Key to enrollment term, the assignment/conversation message/group/quiz/quiz submission/submission associated with this file belongs to.",
          "name": "enrollment_term_id",
          "dimension": {
            "name": "enrollment_term",
            "id": "id",
            "role": "enrollment_term"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the folder this file belongs to.",
          "name": "folder_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the user who graded the submission associated with this file.",
          "dimension": {
            "name": "user_dim",
            "id": "id"
          },
          "name": "grader_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the group this file belongs to.",
          "name": "group_id"
        },
        {
          "type": "bigint",
          "description": "(Not implemented) Foreign key to group category the group associated with this file belongs to.",
          "name": "group_category_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the quiz, the quiz/quiz submission associated with this file belongs to.",
          "name": "quiz_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the quiz submission this file belongs to.",
          "name": "quiz_submission_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the file which overwrote/replaced this file. Defaults to 'NULL' when the file was not overwritten/replaced.",
          "name": "replacement_file_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the source file from which this file was copied and created. Defaults to 'NULL' when this is the only copy.",
          "name": "root_file_id"
        },
        {
          "description": "Correlated ID for the record for the course, associated with this file, in the SIS system (assuming SIS integration is configured).",
          "name": "sis_source_id",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "bigint",
          "description": "Foreign key to the submission this file belongs to.",
          "name": "submission_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the user who uploaded this file. Might contain users which are not in the user dimension table.",
          "dimension": {
            "name": "user_dim",
            "id": "id"
          },
          "name": "uploader_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the user this file belongs to.",
          "name": "user_id",
          "dimension": {
            "name": "user",
            "id": "id",
            "role": "user"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the wiki the conversation message/group/submission associated with this file belongs to.",
          "name": "wiki_id"
        },
        {
          "type": "bigint",
          "description": "Size of this file in bytes.",
          "name": "size"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "file_fact"
    },
    "group_dim": {
      "description": "Attributes for groups in canvas. Groups contain two or more students enrolled in a particular course working on an assignment or project together.",
      "dw_type": "dimension",
      "columns": [
        {
          "type": "bigint",
          "description": "Unique surrogate id for the group.",
          "name": "id"
        },
        {
          "type": "bigint",
          "description": "Primary key to the groups table in canvas.",
          "name": "canvas_id"
        },
        {
          "description": "Name of the group.",
          "name": "name",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "text",
          "description": "Description of the group.",
          "name": "description"
        },
        {
          "type": "timestamp",
          "description": "Timestamp when the group was first saved in the system.",
          "name": "created_at"
        },
        {
          "type": "timestamp",
          "description": "Timestamp when the group was last updated in the system.",
          "name": "updated_at"
        },
        {
          "type": "timestamp",
          "description": "Timestamp when the group was deleted.",
          "name": "deleted_at"
        },
        {
          "type": "boolean",
          "description": "True if the group contents are accessible to public.",
          "name": "is_public"
        },
        {
          "description": "Workflow state for group.(values: deleted,active)",
          "name": "workflow_state",
          "type": "varchar",
          "length": 256
        },
        {
          "description": "The context type to which the group belongs to. For example- Accounts, Courses etc.",
          "name": "context_type",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "text",
          "description": "Group description by the users.",
          "name": "category"
        },
        {
          "description": "Permissions required to join a group. For example, it can be invitation-only or auto.",
          "name": "join_level",
          "type": "varchar",
          "length": 256
        },
        {
          "description": "Default view for groups is the feed.",
          "name": "default_view",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "bigint",
          "description": "Correlated id for the record for this group in the SIS system (assuming SIS integration is configured)",
          "name": "sis_source_id"
        },
        {
          "type": "bigint",
          "description": "(Not implemented) Foreign key to group category dimension table.",
          "name": "group_category_id"
        },
        {
          "type": "bigint",
          "description": "Parent account for this group.",
          "name": "account_id",
          "dimension": {
            "name": "account",
            "id": "id",
            "role": "account"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the wiki_dim table.",
          "name": "wiki_id"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "group_dim"
    },
    "group_fact": {
      "description": "Measures for groups.",
      "dw_type": "fact",
      "columns": [
        {
          "type": "bigint",
          "description": "Foreign key to the group dimension for a particular group.",
          "name": "group_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to course dimension.",
          "name": "parent_course_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to accounts table.",
          "name": "parent_account_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the account dimension for the account associated with the course to which the group belongs to.",
          "dimension": {
            "name": "account_dim",
            "id": "id"
          },
          "name": "parent_course_account_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the enrollment term table for the parent course.",
          "name": "enrollment_term_id",
          "dimension": {
            "name": "enrollment_term",
            "id": "id",
            "role": "enrollment_term"
          }
        },
        {
          "type": "int",
          "description": "Maximum number of users that can be accommodated in a group.",
          "name": "max_membership"
        },
        {
          "type": "bigint",
          "description": "Storage Limit allowed per group.",
          "name": "storage_quota"
        },
        {
          "type": "bigint",
          "description": "(Not implemented) Foreign key to group category dimension table.",
          "name": "group_category_id"
        },
        {
          "type": "bigint",
          "description": "Parent account for this group.",
          "name": "account_id",
          "dimension": {
            "name": "account",
            "id": "id",
            "role": "account"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the wiki_dim table.",
          "name": "wiki_id"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "group_fact"
    },
    "group_membership_fact": {
      "description": "Measures for groups.",
      "dw_type": "fact",
      "columns": [
        {
          "type": "bigint",
          "description": "Foreign key to the group dimension for a particular group.",
          "name": "group_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to course dimension.",
          "name": "parent_course_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to accounts table.",
          "name": "parent_account_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the account dimension for the account associated with the course to which the group belongs to.",
          "dimension": {
            "name": "account_dim",
            "id": "id"
          },
          "name": "parent_course_account_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the enrollment term table for the parent course.",
          "name": "enrollment_term_id",
          "dimension": {
            "name": "enrollment_term",
            "id": "id",
            "role": "enrollment_term"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the user dimension for the users in the group.",
          "name": "user_id",
          "dimension": {
            "name": "user",
            "id": "id",
            "role": "user"
          }
        },
        {
          "description": "The ID of the membership object",
          "name": "group_membership_id",
          "type": "varchar",
          "length": 256
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "group_membership_fact"
    },
    "group_membership_dim": {
      "description": "Attributes for groups_membership in canvas.",
      "dw_type": "dimension",
      "columns": [
        {
          "description": "The ID of the membership object",
          "name": "id",
          "type": "varchar",
          "length": 256
        },
        {
          "description": "The ID of the membership object as it appears in the db.",
          "name": "canvas_id",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "bigint",
          "description": "Foreign key to the group dimension for a particular group.",
          "name": "group_id"
        },
        {
          "type": "enum",
          "description": "Whether or not the user is a moderator of the group.  Possible values are 'is_moderator' and 'not_moderator'.",
          "name": "moderator"
        },
        {
          "type": "enum",
          "description": "The current state of the membership. Current possible values are 'accepted', 'invited', 'requested', and 'deleted'",
          "name": "workflow_state"
        },
        {
          "type": "timestamp",
          "description": "Timestamp when the group membership was first saved in the system.",
          "name": "created_at"
        },
        {
          "type": "timestamp",
          "description": "Timestamp when the group membership was last updated in the system.",
          "name": "updated_at"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "group_membership_dim"
    },
    "module_dim": {
      "dw_type": "dimension",
      "description": "Attributes for a module.",
      "columns": [
        {
          "type": "bigint",
          "description": "Unique surrogate ID for the module.",
          "name": "id"
        },
        {
          "type": "bigint",
          "description": "Original primary key for module in the Canvas table.",
          "name": "canvas_id"
        },
        {
          "type": "bigint",
          "description": "The course that owns this module.",
          "name": "course_id",
          "dimension": {
            "name": "course",
            "id": "id",
            "role": "course"
          }
        },
        {
          "type": "enum",
          "description": "Should module items be completed sequentially?  Valid values are 'required', 'not_required', 'unspecified'.",
          "name": "require_sequential_progress"
        },
        {
          "type": "enum",
          "description": "Workflow state for submission lifetime values. Possible values are 'locked', 'completed', 'unlocked' and 'started'.",
          "name": "workflow_state"
        },
        {
          "type": "integer",
          "description": "Position of the module on the modules page.",
          "name": "position"
        },
        {
          "type": "text",
          "description": "The name of the module in Canvas.",
          "name": "name"
        },
        {
          "type": "timestamp",
          "description": "Date/Time when the module was created.",
          "name": "created_at"
        },
        {
          "type": "timestamp",
          "description": "Timestamp when the module was deleted.",
          "name": "deleted_at"
        },
        {
          "type": "timestamp",
          "description": "Timestamp when the module will unlock.",
          "name": "unlock_at"
        },
        {
          "type": "timestamp",
          "description": "Date/Time when the module was last updated.",
          "name": "updated_at"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "module_dim"
    },
    "module_fact": {
      "dw_type": "fact",
      "description": "Table containing measures related to modules.",
      "columns": [
        {
          "type": "bigint",
          "description": "Foreign key to assignment dimension.",
          "name": "module_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the account the module belongs to.",
          "name": "account_id",
          "dimension": {
            "name": "account",
            "id": "id",
            "role": "account"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the course associated with this assignment.",
          "name": "course_id",
          "dimension": {
            "name": "course",
            "id": "id",
            "role": "course"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the enrollment_term associated with the module_fact course.",
          "name": "enrollment_term_id",
          "dimension": {
            "name": "enrollment_term",
            "id": "id",
            "role": "enrollment_term"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the wiki associated with the module_fact course.",
          "name": "wiki_id"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "module_fact"
    },
    "module_item_dim": {
      "dw_type": "dimension",
      "description": "Attributes for a module item.",
      "columns": [
        {
          "type": "bigint",
          "description": "Unique surrogate ID for the module_item.",
          "name": "id"
        },
        {
          "type": "bigint",
          "description": "Original primary key for module_item in the Canvas table.",
          "name": "canvas_id"
        },
        {
          "type": "bigint",
          "description": "Key into assignments table for 'Assignment' type items.",
          "name": "assignment_id"
        },
        {
          "type": "bigint",
          "description": "The course that owns this module.",
          "name": "course_id",
          "dimension": {
            "name": "course",
            "id": "id",
            "role": "course"
          }
        },
        {
          "type": "bigint",
          "description": "Key into discussion_topics table for 'Discussion' type items.",
          "name": "discussion_topic_id"
        },
        {
          "type": "bigint",
          "description": "Key into file table for 'File' type items.",
          "name": "file_id"
        },
        {
          "type": "bigint",
          "description": "Parent module for this module item.",
          "name": "module_id"
        },
        {
          "type": "bigint",
          "description": "Key into quizzes table for 'Quiz' type items.",
          "name": "quiz_id"
        },
        {
          "type": "bigint",
          "description": "Key into wiki_pages table for 'Page' type items.",
          "name": "wiki_page_id"
        },
        {
          "type": "enum",
          "description": "The type of content linked to this item. One of: 'Assignment', 'Attachment', 'DiscussionTopic', 'ContextExternalTool', 'ContextModuleSubHeader', 'ExternalUrl', 'LearningOutcome', 'Quiz', 'Rubric' or 'WikiPage'.",
          "name": "content_type"
        },
        {
          "type": "enum",
          "description": "State of the module item.",
          "name": "workflow_state"
        },
        {
          "type": "integer",
          "description": "Position of the module item within the module context.",
          "name": "position"
        },
        {
          "type": "text",
          "description": "Title of the module item.",
          "name": "title"
        },
        {
          "type": "text",
          "description": "Url for external url type module items.",
          "name": "url"
        },
        {
          "type": "timestamp",
          "description": "Date/Time when the module item was created.",
          "name": "created_at"
        },
        {
          "type": "timestamp",
          "description": "Date/Time when the module item was last updated.",
          "name": "updated_at"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "module_item_dim"
    },
    "module_item_fact": {
      "dw_type": "fact",
      "description": "Table containing measures related to modules_items.",
      "columns": [
        {
          "type": "bigint",
          "description": "Unique surrogate ID for the module_item.",
          "name": "module_item_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the account the module belongs to.",
          "name": "account_id",
          "dimension": {
            "name": "account",
            "id": "id",
            "role": "account"
          }
        },
        {
          "type": "bigint",
          "description": "Key into assignments table for 'Assignment', 'DiscussionTopic', 'File', 'Quiz' type items.",
          "name": "assignment_id"
        },
        {
          "type": "bigint",
          "description": "Key into assignment_groups for 'Assignment', 'File' type items.",
          "name": "assignment_group_id"
        },
        {
          "type": "bigint",
          "description": "The course that owns this module.",
          "name": "course_id",
          "dimension": {
            "name": "course",
            "id": "id",
            "role": "course"
          }
        },
        {
          "type": "bigint",
          "description": "Key into discussion_topics table for 'DiscussionTopic' type items.",
          "name": "discussion_topic_id"
        },
        {
          "type": "bigint",
          "description": "Key into users table for user who edited 'DiscussionTopic' type items.",
          "dimension": {
            "name": "user_dim",
            "id": "id"
          },
          "name": "discussion_topic_editor_id"
        },
        {
          "type": "bigint",
          "description": "Key into enrollment_rollup table for user associated with 'DiscussionTopic', 'File' type items.",
          "name": "enrollment_rollup_id",
          "dimension": {
            "name": "enrollment_rollup",
            "id": "id",
            "role": "enrollment_rollup"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the enrollment_term associated with the module course.",
          "name": "enrollment_term_id",
          "dimension": {
            "name": "enrollment_term",
            "id": "id",
            "role": "enrollment_term"
          }
        },
        {
          "type": "bigint",
          "description": "Key into file table for 'File' type items.",
          "name": "file_id"
        },
        {
          "type": "bigint",
          "description": "Parent module for this module item.",
          "name": "module_id"
        },
        {
          "type": "bigint",
          "description": "Key into quizzes table for 'File', 'Quiz' type items.",
          "name": "quiz_id"
        },
        {
          "type": "bigint",
          "description": "Key into users table for 'DiscussionTopic', 'File', 'WikiPage' type items.",
          "name": "user_id",
          "dimension": {
            "name": "user",
            "id": "id",
            "role": "user"
          }
        },
        {
          "type": "bigint",
          "description": "Key into wiki table for 'WikiPage' type items.",
          "name": "wiki_id"
        },
        {
          "type": "bigint",
          "description": "Key into wiki_pages table for 'WikiPage' type items.",
          "name": "wiki_page_id"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "module_item_fact"
    },
    "module_progression_dim": {
      "dw_type": "dimension",
      "description": "Attributes for a module progression.",
      "columns": [
        {
          "type": "bigint",
          "description": "Unique surrogate ID for the module progression.",
          "name": "id"
        },
        {
          "type": "bigint",
          "description": "Original primary key for module progression in the Canvas table.",
          "name": "canvas_id"
        },
        {
          "type": "bigint",
          "description": "Parent module for this module progression.",
          "name": "module_id"
        },
        {
          "type": "bigint",
          "description": "User being tracked in the module progression.",
          "name": "user_id",
          "dimension": {
            "name": "user",
            "id": "id",
            "role": "user"
          }
        },
        {
          "type": "enum",
          "description": "Collapsed state of the module progression.",
          "name": "collapsed"
        },
        {
          "type": "enum",
          "description": "The current state of the module progression.",
          "name": "is_current"
        },
        {
          "type": "enum",
          "description": "The workflow state of the module progression.",
          "name": "workflow_state"
        },
        {
          "type": "integer",
          "description": "Represents the users current position in the module.",
          "name": "current_position"
        },
        {
          "type": "integer",
          "description": "Lock version of the module progression.",
          "name": "lock_version"
        },
        {
          "type": "timestamp",
          "description": "Date/Time when the module progression was created.",
          "name": "created_at"
        },
        {
          "type": "timestamp",
          "description": "Date/Time when the module progression was completed.",
          "name": "completed_at"
        },
        {
          "type": "timestamp",
          "description": "Date/Time when the module progression was evaluated.",
          "name": "evaluated_at"
        },
        {
          "type": "timestamp",
          "description": "Date/Time when the module progression was last updated.",
          "name": "updated_at"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "module_progression_dim"
    },
    "module_progression_fact": {
      "dw_type": "fact",
      "description": "Table containing measures related to modules_progression.",
      "columns": [
        {
          "type": "bigint",
          "description": "Unique surrogate ID for the module progression.",
          "name": "module_progression_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the account the module belongs to.",
          "name": "account_id",
          "dimension": {
            "name": "account",
            "id": "id",
            "role": "account"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the course associated with this module.",
          "name": "course_id",
          "dimension": {
            "name": "course",
            "id": "id",
            "role": "course"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the enrollment_term associated with the module course.",
          "name": "enrollment_term_id",
          "dimension": {
            "name": "enrollment_term",
            "id": "id",
            "role": "enrollment_term"
          }
        },
        {
          "type": "bigint",
          "description": "Parent module for this module progression.",
          "name": "module_id"
        },
        {
          "type": "bigint",
          "description": "User being tracked in the module progression.",
          "name": "user_id",
          "dimension": {
            "name": "user",
            "id": "id",
            "role": "user"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the wiki associated with the module course.",
          "name": "wiki_id"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "module_progression_fact"
    },
    "module_completion_requirement_dim": {
      "dw_type": "dimension",
      "description": "Attributes for a module completion.",
      "columns": [
        {
          "type": "bigint",
          "description": "Unique surrogate ID for the module completion requirement.",
          "name": "id"
        },
        {
          "type": "bigint",
          "description": "Module that contains the completion requirement.",
          "name": "module_id"
        },
        {
          "type": "bigint",
          "description": "Item that is the subject of the completion requirement.",
          "name": "module_item_id"
        },
        {
          "type": "enum",
          "description": "Type of completion event that must be achieved to consider item complete.",
          "name": "requirement_type"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "module_completion_requirement_dim"
    },
    "module_completion_requirement_fact": {
      "dw_type": "fact",
      "description": "Table containing measures related to module completion requirements.",
      "columns": [
        {
          "type": "bigint",
          "description": "Unique surrogate ID for the module completion requirement.",
          "name": "module_completion_requirement_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the account the module and the module item belong to.",
          "name": "account_id",
          "dimension": {
            "name": "account",
            "id": "id",
            "role": "account"
          }
        },
        {
          "type": "bigint",
          "description": "Assignment associated with the module item.",
          "name": "assignment_id"
        },
        {
          "type": "bigint",
          "description": "Assignment group associated with the module item.",
          "name": "assignment_group_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the course associated with this module and the module item.",
          "name": "course_id",
          "dimension": {
            "name": "course",
            "id": "id",
            "role": "course"
          }
        },
        {
          "type": "bigint",
          "description": "Discussion topic associated with the module item.",
          "name": "discussion_topic_id"
        },
        {
          "type": "bigint",
          "description": "Editor of the discussion topic associated with the module item.",
          "dimension": {
            "name": "user_dim",
            "id": "id"
          },
          "name": "discussion_topic_editor_id"
        },
        {
          "type": "bigint",
          "description": "Enrollment rollup associated with the module item.",
          "name": "enrollment_rollup_id",
          "dimension": {
            "name": "enrollment_rollup",
            "id": "id",
            "role": "enrollment_rollup"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the enrollment term associated with this module and the module item.",
          "name": "enrollment_term_id",
          "dimension": {
            "name": "enrollment_term",
            "id": "id",
            "role": "enrollment_term"
          }
        },
        {
          "type": "bigint",
          "description": "File associated with the module item.",
          "name": "file_id"
        },
        {
          "type": "bigint",
          "description": "Module that contains the completion requirement.",
          "name": "module_id"
        },
        {
          "type": "bigint",
          "description": "Item that is the subject of the completion requirement.",
          "name": "module_item_id"
        },
        {
          "type": "bigint",
          "description": "Quiz associated with the module item.",
          "name": "quiz_id"
        },
        {
          "type": "bigint",
          "description": "User associated with the module item.",
          "name": "user_id",
          "dimension": {
            "name": "user",
            "id": "id",
            "role": "user"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the wiki associated with this module and the module item.",
          "name": "wiki_id"
        },
        {
          "type": "bigint",
          "description": "Wiki page associated with the module_item.",
          "name": "wiki_page_id"
        },
        {
          "type": "double precision",
          "description": "For min_score type requirements, the score that must be attained for completion.",
          "name": "min_score"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "module_completion_requirement_fact"
    },
    "module_prerequisite_dim": {
      "dw_type": "dimension",
      "description": "Attributes for a module prerequisite.",
      "columns": [
        {
          "type": "bigint",
          "description": "Unique surrogate ID for the module prerequisite.",
          "name": "id"
        },
        {
          "type": "bigint",
          "description": "Module that contains the prerequisite.",
          "name": "module_id"
        },
        {
          "type": "bigint",
          "description": "Module that must be completed to fulfill the prerequisite.",
          "dimension": {
            "name": "module_dim",
            "id": "id"
          },
          "name": "prerequisite_module_id"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "module_prerequisite_dim"
    },
    "module_prerequisite_fact": {
      "dw_type": "fact",
      "description": "Table containing measures related to module prerequisites.",
      "columns": [
        {
          "type": "bigint",
          "description": "Unique surrogate ID for the module prerequisite.",
          "name": "module_prerequisite_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the account the module belongs to.",
          "name": "account_id",
          "dimension": {
            "name": "account",
            "id": "id",
            "role": "account"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the course associated with this assignment.",
          "name": "course_id",
          "dimension": {
            "name": "course",
            "id": "id",
            "role": "course"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the enrollment_term associated with the module_fact course.",
          "name": "enrollment_term_id",
          "dimension": {
            "name": "enrollment_term",
            "id": "id",
            "role": "enrollment_term"
          }
        },
        {
          "type": "bigint",
          "description": "Module that contains the prerequisite.",
          "name": "module_id"
        },
        {
          "type": "bigint",
          "description": "Module that must be completed to fulfill the prerequisite.",
          "name": "prerequisite_module_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the wiki associated with the module_fact course.",
          "dimension": {
            "name": "wiki_dim",
            "id": "id"
          },
          "name": "prerequisite_wiki_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the wiki associated with the module_fact course.",
          "name": "wiki_id"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "module_prerequisite_fact"
    },
    "module_progression_completion_requirement_dim": {
      "dw_type": "dimension",
      "description": "Attributes tracking a requirement that remains to be completed by a user.  Not a comprehensive list, typically just holds requirements that have been attempted by the user.",
      "columns": [
        {
          "type": "bigint",
          "description": "Unique surrogate ID for the module progression completion requirement.",
          "name": "id"
        },
        {
          "type": "bigint",
          "description": "Module progression referenced by completion requirement.",
          "name": "module_progression_id"
        },
        {
          "type": "bigint",
          "description": "Item that the user has not completed.",
          "name": "module_item_id"
        },
        {
          "type": "enum",
          "description": "Type of completion event that must be achieved to consider item complete.",
          "name": "requirement_type"
        },
        {
          "type": "enum",
          "description": "Denotes if the completion event is complete or not. Possible values are 'complete' and 'incomplete'.",
          "name": "completion_status"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "module_progression_completion_requirement_dim"
    },
    "module_progression_completion_requirement_fact": {
      "dw_type": "fact",
      "description": "Table containing measures related to module progression completion requirements.",
      "columns": [
        {
          "type": "bigint",
          "description": "Unique surrogate ID for the module progression completion requirement.",
          "name": "module_progression_completion_requirement_id"
        },
        {
          "type": "bigint",
          "description": "Key to the account associated with the module progression and the module item.",
          "name": "account_id",
          "dimension": {
            "name": "account",
            "id": "id",
            "role": "account"
          }
        },
        {
          "type": "bigint",
          "description": "Key to the assignment associated with the module item.",
          "name": "assignment_id"
        },
        {
          "type": "bigint",
          "description": "Key to the assignment group associated with the module item.",
          "name": "assignment_group_id"
        },
        {
          "type": "bigint",
          "description": "Key to the course associated with the module progression and the module item.",
          "name": "course_id",
          "dimension": {
            "name": "course",
            "id": "id",
            "role": "course"
          }
        },
        {
          "type": "bigint",
          "description": "Key to the discussion topic associated with the module item.",
          "name": "discussion_topic_id"
        },
        {
          "type": "bigint",
          "description": "Key to the user editing the discussion topic associated with the module item.",
          "dimension": {
            "name": "user_dim",
            "id": "id"
          },
          "name": "discussion_topic_editor_id"
        },
        {
          "type": "bigint",
          "description": "Key to the enrollment rollup associated with the module item.",
          "name": "enrollment_rollup_id",
          "dimension": {
            "name": "enrollment_rollup",
            "id": "id",
            "role": "enrollment_rollup"
          }
        },
        {
          "type": "bigint",
          "description": "Key to the enrollment term associated with the module progression and the module item.",
          "name": "enrollment_term_id",
          "dimension": {
            "name": "enrollment_term",
            "id": "id",
            "role": "enrollment_term"
          }
        },
        {
          "type": "bigint",
          "description": "Key to the file associated with the module item.",
          "name": "file_id"
        },
        {
          "type": "bigint",
          "description": "Parent module for this module progression and module item.",
          "name": "module_id"
        },
        {
          "type": "bigint",
          "description": "Item that the user has not completed.",
          "name": "module_item_id"
        },
        {
          "type": "bigint",
          "description": "Module progression referenced by the completion requirement.",
          "name": "module_progression_id"
        },
        {
          "type": "bigint",
          "description": "Key to the quiz associated with the module item.",
          "name": "quiz_id"
        },
        {
          "type": "bigint",
          "description": "Key to the user associated with the module progression and the module item.",
          "name": "user_id",
          "dimension": {
            "name": "user",
            "id": "id",
            "role": "user"
          }
        },
        {
          "type": "bigint",
          "description": "Key to the wiki associated with the module progression and the module item.",
          "name": "wiki_id"
        },
        {
          "type": "bigint",
          "description": "Key to the wiki page associated with the module item.",
          "name": "wiki_page_id"
        },
        {
          "type": "double precision",
          "description": "For min_score type requirements, the score that must be attained for completion.",
          "name": "min_score"
        },
        {
          "type": "double precision",
          "description": "For min_score type requirements, the score that the user has currently achieved.",
          "name": "score"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "module_progression_completion_requirement_fact"
    },
    "course_ui_canvas_navigation_dim": {
      "dw_type": "dimension",
      "description": "Attributes for a Canvas navigation function",
      "columns": [
        {
          "type": "bigint",
          "description": "Primary key for navigational item",
          "name": "id"
        },
        {
          "type": "bigint",
          "description": "ID in Canvas system",
          "name": "canvas_id"
        },
        {
          "description": "Name of navigational item",
          "name": "name",
          "type": "varchar",
          "length": 256
        },
        {
          "description": "(Default|NotDefault) - set to Default if this is one of the navigation items enabled in a course by default",
          "name": "default",
          "type": "varchar",
          "length": 256
        },
        {
          "description": "Original position of this navigation item",
          "name": "original_position",
          "type": "varchar",
          "length": 256
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "course_ui_canvas_navigation_dim"
    },
    "course_ui_navigation_item_dim": {
      "dw_type": "dimension",
      "description": "Attributes for a navigation item",
      "columns": [
        {
          "type": "bigint",
          "description": "Primary key for navigational item",
          "name": "id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to root account of the course",
          "name": "root_account_id"
        },
        {
          "description": "(visible|hidden) Visible if this element is visible, hidden if hidden/not available in the navigation",
          "name": "visible",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "int",
          "description": "Position in the navigation.  NULL if hidden.",
          "name": "position"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "course_ui_navigation_item_dim"
    },
    "course_ui_navigation_item_fact": {
      "dw_type": "fact",
      "description": "Facts describing a single item in the navigation UI",
      "columns": [
        {
          "type": "bigint",
          "description": "Foreign key to root account of the course",
          "name": "root_account_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to course_ui_navigation_item_dim",
          "name": "course_ui_navigation_item_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to navigation function",
          "name": "course_ui_canvas_navigation_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to external_tool_activation_dim",
          "name": "external_tool_activation_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to course",
          "name": "course_id",
          "dimension": {
            "name": "course",
            "id": "id",
            "role": "course"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to account for course",
          "name": "course_account_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to enrollment term",
          "name": "enrollment_term_id",
          "dimension": {
            "name": "enrollment_term",
            "id": "id",
            "role": "enrollment_term"
          }
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "course_ui_navigation_item_fact"
    },
    "quiz_dim": {
      "dw_type": "dimension",
      "description": "Attributes for quiz.",
      "columns": [
        {
          "type": "bigint",
          "description": "Unique surrogate ID for the quiz.",
          "name": "id"
        },
        {
          "type": "bigint",
          "description": "Primary key for this quiz in the quizzes table.",
          "name": "canvas_id"
        },
        {
          "type": "bigint",
          "description": "Root account ID associated with this quiz.",
          "name": "root_account_id"
        },
        {
          "type": "varchar",
          "description": "Name of the quiz. Equivalent Canvas API field -> 'title'.",
          "name": "name",
          "length": 256
        },
        {
          "type": "double precision",
          "description": "Total point value given to the quiz.",
          "name": "points_possible"
        },
        {
          "type": "text",
          "description": "Description of the quiz.",
          "name": "description"
        },
        {
          "type": "varchar",
          "description": "Type of quiz. Possible values are 'practice_quiz', 'assignment', 'graded_survey' and 'survey'. Defaults to 'NULL'.",
          "name": "quiz_type",
          "length": 256
        },
        {
          "type": "bigint",
          "description": "Foreign key to the course the quiz belongs to.",
          "name": "course_id",
          "dimension": {
            "name": "course",
            "id": "id",
            "role": "course"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the assignment the quiz belongs to.",
          "name": "assignment_id"
        },
        {
          "type": "varchar",
          "description": "Denotes where the quiz is in the workflow. Possible values are 'unpublished', 'published' and 'deleted'. Defaults to 'unpublished'.",
          "name": "workflow_state",
          "length": 256
        },
        {
          "type": "varchar",
          "description": "Scoring policy for a quiz that students can take multiple times. Is required and only valid if allowed_attempts > 1. Possible values are 'keep_highest', 'keep_latest' and 'keep_average'. Defaults to 'keep_highest'.",
          "name": "scoring_policy",
          "length": 256
        },
        {
          "type": "varchar",
          "description": "Dictates whether students are allowed to submit the quiz anonymously. Possible values are 'allow_anonymous_submissions' and 'disallow_anonymous_submissions'. Defaults to 'disallow_anonymous_submissions'.",
          "name": "anonymous_submissions",
          "length": 256
        },
        {
          "type": "varchar",
          "description": "Policy for displaying the questions in the quiz. Possible values are 'multiple_at_a_time' and 'one_at_a_time'. Defaults to 'multiple_at_a_time'. Equivalent Canvas API field -> 'one_question_at_a_time'.",
          "name": "display_questions",
          "length": 256
        },
        {
          "type": "varchar",
          "description": "Policy for displaying the answers for each question in the quiz. Possible values are 'in_order' and 'shuffled'. Defaults to 'in_order'. Equivalent Canvas API field -> 'shuffle_answers'.",
          "name": "answer_display_order",
          "length": 256
        },
        {
          "type": "varchar",
          "description": "Policy on going back to the previous question. Is valid only if 'display_questions' is set to 'one_at_a_time'. Possible values are 'allow_going_back' and 'disallow_going_back'. Defaults to 'allow_going_back'. Equivalent Canvas API field -> 'cant_go_back'.",
          "name": "go_back_to_previous_question",
          "length": 256
        },
        {
          "type": "varchar",
          "description": "Dictates if the quiz can be locked or not. Possible values are 'allow_locking' and 'disallow_locking'. Defaults to 'disallow_locking'.",
          "name": "could_be_locked",
          "length": 256
        },
        {
          "type": "varchar",
          "description": "Dictates whether the browser has locked-down when the quiz is being taken. Possible values are 'required' and 'not_required'. Defaults to 'not_required'.",
          "name": "browser_lockdown",
          "length": 256
        },
        {
          "type": "varchar",
          "description": "Dictates whether the browser has to be locked-down to display the results. Is valid only if 'hide_results' is set to 'never' or 'until_after_last_attempt' (for the results to be displayed after the last attempt). Possible values are 'required' and 'not_required'. Defaults to 'not_required'.",
          "name": "browser_lockdown_for_displaying_results",
          "length": 256
        },
        {
          "type": "varchar",
          "description": "Dictates whether a browser lockdown monitor is required. Possible values are 'required' and 'not_required'. Defaults to 'not_required'.",
          "name": "browser_lockdown_monitor",
          "length": 256
        },
        {
          "type": "varchar",
          "description": "Restricts access to the quiz to computers in a specified IP range. Filters can be a comma-separated list of addresses, or an address followed by a mask.",
          "name": "ip_filter",
          "length": 256
        },
        {
          "type": "varchar",
          "description": "Dictates whether or not quiz results are shown to students. If set to 'always', students can see their results after any attempt and if set to 'never', students can never see their results. If 'dw_quiz_fact.allowed_attempts > 1' then when set to 'always_after_last_attempt', students can only see their results always, but only after their last attempt. Similarly, if set to 'only_once_after_last_attempt', then students can see their results only after their last attempt, that too only once. Possible values are 'always', 'never', 'always_after_last_attempt' and 'only_once_after_last_attempt'. Defaults to 'always'. Equivalent Canvas API field -> 'hide_results' combined with 'one_time_results'.",
          "name": "show_results",
          "length": 256
        },
        {
          "type": "varchar",
          "description": "Dictates whether correct answers are shown when are results are viewed. It's valid only if 'show_results' is set to 'always'. Possible values are 'always', 'never', 'only_once_after_last_attempt' and 'always_after_last_attempt' (Last two are only valid if 'dw_quiz_fact.allowed_attempts > 1') which have a behavior similar to 'show_results'. Defaults to 'always'. Equivalent Canvas API field -> 'show_correct_answers' combined with 'show_correct_answers_last_attempt'.",
          "name": "show_correct_answers",
          "length": 256
        },
        {
          "type": "timestamp",
          "description": "Day/Time when the correct answers would be shown.",
          "name": "show_correct_answers_at"
        },
        {
          "type": "timestamp",
          "description": "Day/Time when the correct answers are to be hidden.",
          "name": "hide_correct_answers_at"
        },
        {
          "type": "timestamp",
          "description": "Time when the quiz was created.",
          "name": "created_at"
        },
        {
          "type": "timestamp",
          "description": "Time when the quiz was last updated.",
          "name": "updated_at"
        },
        {
          "type": "timestamp",
          "description": "Time when the quiz was published.",
          "name": "published_at"
        },
        {
          "type": "timestamp",
          "description": "Day/Time when the quiz is to be unlocked for students.",
          "name": "unlock_at"
        },
        {
          "type": "timestamp",
          "description": "Day/Time when the quiz is to be locked for students.",
          "name": "lock_at"
        },
        {
          "type": "timestamp",
          "description": "Day/Time when the quiz is due.",
          "name": "due_at"
        },
        {
          "type": "timestamp",
          "description": "Time when the quiz was deleted.",
          "name": "deleted_at"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "quiz_dim"
    },
    "quiz_fact": {
      "dw_type": "fact",
      "description": "Measures for quiz.",
      "columns": [
        {
          "type": "bigint",
          "description": "Foreign key to quiz dimension table.",
          "name": "quiz_id"
        },
        {
          "type": "double precision",
          "description": "Total point value given to the quiz.",
          "name": "points_possible"
        },
        {
          "type": "int",
          "description": "Time limit, in minutes, to complete the quiz. Set to -1 for no time limit. Defaults to -1.",
          "name": "time_limit"
        },
        {
          "type": "int",
          "description": "Number of attempts allowed to complete the quiz. Set to -1 for unlimited attempts. Defaults to -1.",
          "name": "allowed_attempts"
        },
        {
          "type": "int",
          "description": "Number of questions in the current unpublished version of the quiz.",
          "name": "unpublished_question_count"
        },
        {
          "type": "int",
          "description": "Number of questions in the last published version of the quiz",
          "name": "question_count"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the course the quiz belongs to.",
          "name": "course_id",
          "dimension": {
            "name": "course",
            "id": "id",
            "role": "course"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the assignment the quiz belongs to.",
          "name": "assignment_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the account associated with the course associated with this quiz.",
          "dimension": {
            "name": "account_dim",
            "id": "id"
          },
          "name": "course_account_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to enrollment term the quiz belongs to.",
          "name": "enrollment_term_id",
          "dimension": {
            "name": "enrollment_term",
            "id": "id",
            "role": "enrollment_term"
          }
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "quiz_fact"
    },
    "quiz_submission_historical_dim": {
      "dw_type": "dimension",
      "description": "Attributes for all submitted quizzes",
      "columns": [
        {
          "type": "bigint",
          "description": "Unique surrogate ID for the quiz submission.",
          "name": "id"
        },
        {
          "type": "bigint",
          "description": "Primary key for this quiz submission in the 'quiz_submissions' Canvas table.",
          "name": "canvas_id"
        },
        {
          "type": "bigint",
          "description": "ID of the quiz the quiz submission represents. Foreign key to the quiz dimension table.",
          "name": "quiz_id"
        },
        {
          "type": "bigint",
          "description": "ID to the submission the quiz submission represents. Foreign key to the quiz submission dimension table.",
          "name": "submission_id"
        },
        {
          "type": "bigint",
          "description": "ID of the user (who is a student) who made the submission. Foreign key to the user dimension table.",
          "name": "user_id",
          "dimension": {
            "name": "user",
            "id": "id",
            "role": "user"
          }
        },
        {
          "type": "int",
          "description": "Version number of this quiz submission.",
          "name": "version_number"
        },
        {
          "type": "varchar",
          "description": "Denotes if the quiz submission is a current or previous submission. Possible values are 'current_submission' and 'previous_submission'. Defaults to 'current_submission'.",
          "name": "submission_state",
          "length": 256
        },
        {
          "type": "varchar",
          "description": "Denotes the current state of the quiz submission. Possible values are 'untaken', 'complete', 'pending_review', 'preview' and 'settings_only'. Out of these, 'settings_only' pertains only to quiz moderation events. It stores the settings to create and store moderation events before the student has begun an attempt. Defaults to 'untaken'.",
          "name": "workflow_state",
          "length": 256
        },
        {
          "type": "varchar",
          "description": "There can be two types of quiz states during submission, 1. Quiz submission took place after the quiz was manually unlocked after being locked (but only for a particular student such that (s)he can take the quiz even if it's locked for everyone else). 2. Quiz submission was on-time (that is, when the quiz was never locked). So the two possible values are 'manually_unlocked' and 'never_locked'. Defaults to 'never_locked'.",
          "name": "quiz_state_during_submission",
          "length": 256
        },
        {
          "type": "varchar",
          "description": "Denotes if the score has been manually overridden by a teacher to reflect the score of a previous attempt (as opposed to a score calculated by the quiz's scoring policy. Possible values are 'manually_overridden' or the general quiz scoring policies, i.e. 'keep_highest', 'keep_latest' and 'keep_average'. Defaults to the scoring policy of the quiz the submission is associated with.",
          "name": "submission_scoring_policy",
          "length": 256
        },
        {
          "type": "varchar",
          "description": "Denotes where the submission was received from. Possible values are 'student' and 'test_preview'. Defaults to 'student'.",
          "name": "submission_source",
          "length": 256
        },
        {
          "type": "varchar",
          "description": "Denotes whether the student has viewed their results to the quiz.",
          "name": "has_seen_results",
          "length": 256
        },
        {
          "type": "varchar",
          "description": "Construct for previewing a quiz.",
          "name": "temporary_user_code",
          "length": 256
        },
        {
          "type": "timestamp",
          "description": "Time when the quiz submission was created.",
          "name": "created_at"
        },
        {
          "type": "timestamp",
          "description": "Time when the quiz submission was last updated.",
          "name": "updated_at"
        },
        {
          "type": "timestamp",
          "description": "Time at which the student started the quiz submission.",
          "name": "started_at"
        },
        {
          "type": "timestamp",
          "description": "Time at which the student submitted the quiz submission.",
          "name": "finished_at"
        },
        {
          "type": "timestamp",
          "description": "Time at which the quiz submission will be overdue, and will be flagged as a late submission.",
          "name": "due_at"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "quiz_submission_historical_dim"
    },
    "quiz_submission_historical_fact": {
      "dw_type": "fact",
      "description": "Measures for the all submitted quizzes",
      "columns": [
        {
          "type": "double precision",
          "description": "Denotes the score for this submission. Its value would be NULL when they are in the 'preview', 'untaken' OR 'settings_only' workflow states (since it is associated with quiz moderation events). Or its value should not be NULL when workflow state is either 'complete' or 'pending_review'. It defaults to NULL.",
          "name": "score"
        },
        {
          "type": "double precision",
          "description": "For quizzes that allow multiple attempts, this is the actual score that will be associated with the user for this quiz. This score depends on the scoring policy we have for the submission in the quiz submission dimension table, the workflow state being 'completed' or 'pending_review' and the allowed attempts to be greater than 1. Its value can be NULL when not all these required conditions are met.",
          "name": "kept_score"
        },
        {
          "type": "timestamp",
          "description": "Contains the same value as 'finished_at'. Provided to support backward compatibility with the existing table in production.",
          "name": "date"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the course this submission belongs to.",
          "name": "course_id",
          "dimension": {
            "name": "course",
            "id": "id",
            "role": "course"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the enrollment term of the course this submission belongs to.",
          "name": "enrollment_term_id",
          "dimension": {
            "name": "enrollment_term",
            "id": "id",
            "role": "enrollment_term"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the account of the course this submission belongs to.",
          "name": "course_account_id"
        },
        {
          "type": "bigint",
          "description": "ID of the quiz the quiz submission represents. Foreign key to the quiz dimension table.",
          "name": "quiz_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the assignment the quiz belongs to.",
          "name": "assignment_id"
        },
        {
          "type": "bigint",
          "description": "ID of the user (who is a student) who made the submission. Foreign key to the user dimension table.",
          "name": "user_id",
          "dimension": {
            "name": "user",
            "id": "id",
            "role": "user"
          }
        },
        {
          "type": "bigint",
          "description": "ID to the submission the quiz submission represents. Foreign key to the quiz submission dimension table.",
          "name": "submission_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the enrollment roll-up dimension table.",
          "name": "enrollment_rollup_id",
          "dimension": {
            "name": "enrollment_rollup",
            "id": "id",
            "role": "enrollment_rollup"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the quiz submission dimension table.",
          "name": "quiz_submission_historical_id"
        },
        {
          "type": "double precision",
          "description": "Maximum points that can be scored in this quiz.",
          "name": "quiz_points_possible"
        },
        {
          "type": "double precision",
          "description": "Original score of the quiz submission prior to any re-grading. It's NULL if the submission has never been regraded. Defaults to NULL.",
          "name": "score_before_regrade"
        },
        {
          "type": "double precision",
          "description": "Number of points the quiz submission's score was fudged (changed) by. Values can be negative or positive. Defaults to 0.",
          "name": "fudge_points"
        },
        {
          "type": "int",
          "description": "Denotes the total number of attempts made by the student for the quiz. Is valid only if the quiz allows multiple attempts.",
          "name": "total_attempts"
        },
        {
          "type": "int",
          "description": "Number of times the student was allowed to re-take the quiz over the multiple-attempt limit.",
          "name": "extra_attempts"
        },
        {
          "type": "int",
          "description": "Amount of extra time allowed for the quiz submission, in minutes.",
          "name": "extra_time"
        },
        {
          "type": "int",
          "description": "Time taken, in seconds, to finish the quiz.",
          "name": "time_taken"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "quiz_submission_historical_fact"
    },
    "quiz_submission_dim": {
      "dw_type": "dimension",
      "description": "Attributes for the last submitted quiz",
      "columns": [
        {
          "type": "bigint",
          "description": "Unique surrogate ID for the quiz submission.",
          "name": "id"
        },
        {
          "type": "bigint",
          "description": "Primary key for this quiz submission in the 'quiz_submissions' Canvas table.",
          "name": "canvas_id"
        },
        {
          "type": "bigint",
          "description": "ID of the quiz the quiz submission represents. Foreign key to the quiz dimension table.",
          "name": "quiz_id"
        },
        {
          "type": "bigint",
          "description": "ID to the submission the quiz submission represents. Foreign key to the quiz submission dimension table.",
          "name": "submission_id"
        },
        {
          "type": "bigint",
          "description": "ID of the user (who is a student) who made the submission. Foreign key to the user dimension table.",
          "name": "user_id",
          "dimension": {
            "name": "user",
            "id": "id",
            "role": "user"
          }
        },
        {
          "type": "varchar",
          "description": "Denotes the current state of the quiz submission. Possible values are 'untaken', 'complete', 'pending_review', 'preview' and 'settings_only'. Defaults to 'untaken'. An 'untaken' quiz submission is recorded as soon as a student starts the quiz taking process, before even answering the first question. 'pending_review' denotes that a manual submission has been made by the student which has not been completely graded yet. This usually happens when one or more questions in the quiz cannot be autograded (e.g.. 'essay_question' type questions). A 'preview' workflow state is recorded when a Teacher or Admin previews a quiz (even a partial one). 'settings_only' pertains only to quiz moderation events. It stores the settings to create and store moderation events before the student has begun an attempt.",
          "name": "workflow_state",
          "length": 256
        },
        {
          "type": "varchar",
          "description": "There can be two types of quiz states during submission, 1. Quiz submission took place after the quiz was manually unlocked after being locked (but only for a particular student such that (s)he can take the quiz even if it's locked for everyone else). 2. Quiz submission was on-time (that is, when the quiz was never locked). So the two possible values are 'manually_unlocked' and 'never_locked'. Defaults to 'never_locked'.",
          "name": "quiz_state_during_submission",
          "length": 256
        },
        {
          "type": "varchar",
          "description": "Denotes if the score has been manually overridden by a teacher to reflect the score of a previous attempt (as opposed to a score calculated by the quiz's scoring policy. Possible values are 'manually_overridden' or the general quiz scoring policies, i.e. 'keep_highest', 'keep_latest' and 'keep_average'. Defaults to the scoring policy of the quiz the submission is associated with.",
          "name": "submission_scoring_policy",
          "length": 256
        },
        {
          "type": "varchar",
          "description": "Denotes where the submission was received from. Possible values are 'student' and 'test_preview'. Defaults to 'student'.",
          "name": "submission_source",
          "length": 256
        },
        {
          "type": "varchar",
          "description": "Denotes whether the student has viewed their results to the quiz.",
          "name": "has_seen_results",
          "length": 256
        },
        {
          "type": "varchar",
          "description": "Construct for previewing a quiz.",
          "name": "temporary_user_code",
          "length": 256
        },
        {
          "type": "timestamp",
          "description": "Time when the quiz submission was created.",
          "name": "created_at"
        },
        {
          "type": "timestamp",
          "description": "Time when the quiz submission was last updated.",
          "name": "updated_at"
        },
        {
          "type": "timestamp",
          "description": "Time at which the student started the quiz submission.",
          "name": "started_at"
        },
        {
          "type": "timestamp",
          "description": "Time at which the student submitted the quiz submission.",
          "name": "finished_at"
        },
        {
          "type": "timestamp",
          "description": "Time at which the quiz submission will be overdue, and will be flagged as a late submission.",
          "name": "due_at"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "quiz_submission_dim"
    },
    "quiz_submission_fact": {
      "dw_type": "fact",
      "description": "Measures for the last submitted quiz",
      "columns": [
        {
          "type": "double precision",
          "description": "Denotes the score for this submission. Its value would be NULL when they are in the 'preview', 'untaken' OR 'settings_only' workflow states (since it is associated with quiz moderation events). Or its value should not be NULL when workflow state is either 'complete' or 'pending_review'. It defaults to NULL.",
          "name": "score"
        },
        {
          "type": "double precision",
          "description": "For quizzes that allow multiple attempts, this is the actual score that will be associated with the user for this quiz. This score depends on the scoring policy we have for the submission in the quiz submission dimension table, the workflow state being 'completed' or 'pending_review' and the allowed attempts to be greater than 1. Its value can be NULL when not all these required conditions are met.",
          "name": "kept_score"
        },
        {
          "type": "timestamp",
          "description": "Contains the same value as 'finished_at'. Provided to support backward compatibility with the existing table in production.",
          "name": "date"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the course this submission belongs to.",
          "name": "course_id",
          "dimension": {
            "name": "course",
            "id": "id",
            "role": "course"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the enrollment term of the course this submission belongs to.",
          "name": "enrollment_term_id",
          "dimension": {
            "name": "enrollment_term",
            "id": "id",
            "role": "enrollment_term"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the account of the course this submission belongs to.",
          "name": "course_account_id"
        },
        {
          "type": "bigint",
          "description": "ID of the quiz the quiz submission represents. Foreign key to the quiz dimension table.",
          "name": "quiz_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the assignment the quiz belongs to.",
          "name": "assignment_id"
        },
        {
          "type": "bigint",
          "description": "ID of the user (who is a student) who made the submission. Foreign key to the user dimension table.",
          "name": "user_id",
          "dimension": {
            "name": "user",
            "id": "id",
            "role": "user"
          }
        },
        {
          "type": "bigint",
          "description": "ID to the submission the quiz submission represents. Foreign key to the quiz submission dimension table.",
          "name": "submission_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the enrollment roll-up dimension table.",
          "name": "enrollment_rollup_id",
          "dimension": {
            "name": "enrollment_rollup",
            "id": "id",
            "role": "enrollment_rollup"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the quiz submission dimension table.",
          "name": "quiz_submission_id"
        },
        {
          "type": "double precision",
          "description": "Maximum points that can be scored in this quiz.",
          "name": "quiz_points_possible"
        },
        {
          "type": "double precision",
          "description": "Original score of the quiz submission prior to any re-grading. It's NULL if the submission has never been regraded. Defaults to NULL.",
          "name": "score_before_regrade"
        },
        {
          "type": "double precision",
          "description": "Number of points the quiz submission's score was fudged (changed) by. Values can be negative or positive. Defaults to 0.",
          "name": "fudge_points"
        },
        {
          "type": "int",
          "description": "Denotes the total number of attempts made by the student for the quiz. Is valid only if the quiz allows multiple attempts.",
          "name": "total_attempts"
        },
        {
          "type": "int",
          "description": "Number of times the student was allowed to re-take the quiz over the multiple-attempt limit.",
          "name": "extra_attempts"
        },
        {
          "type": "int",
          "description": "Amount of extra time allowed for the quiz submission, in minutes.",
          "name": "extra_time"
        },
        {
          "type": "int",
          "description": "Time taken, in seconds, to finish the quiz.",
          "name": "time_taken"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "quiz_submission_fact"
    },
    "quiz_question_group_dim": {
      "dw_type": "dimension",
      "description": "Attributes for quiz group.",
      "columns": [
        {
          "type": "bigint",
          "description": "Unique surrogate ID for the quiz group.",
          "name": "id"
        },
        {
          "type": "bigint",
          "description": "Primary key for this quiz group in the 'quiz_question_groups' table.",
          "name": "canvas_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to quiz dimension.",
          "name": "quiz_id"
        },
        {
          "type": "varchar",
          "description": "Name of the quiz group.",
          "name": "name",
          "length": 256
        },
        {
          "type": "int",
          "description": "Order in which the questions from this group will be displayed in the quiz relative to other questions in the quiz from other groups.",
          "name": "position"
        },
        {
          "type": "timestamp",
          "description": "Time when the quiz question was created.",
          "name": "created_at"
        },
        {
          "type": "timestamp",
          "description": "Time when the quiz question was last updated.",
          "name": "updated_at"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "quiz_question_group_dim"
    },
    "quiz_question_group_fact": {
      "dw_type": "fact",
      "description": "Measures related to quiz groups.",
      "columns": [
        {
          "type": "bigint",
          "description": "Foreign key to quiz group.",
          "name": "quiz_question_group_id"
        },
        {
          "type": "int",
          "description": "Number of questions picked from the group for the quiz the group is associated with.",
          "name": "pick_count"
        },
        {
          "type": "double precision",
          "description": "Number of points to assign per question in the group.",
          "name": "question_points"
        },
        {
          "type": "bigint",
          "description": "Foreign key to quiz dimension.",
          "name": "quiz_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the course this group's quiz belongs to.",
          "name": "course_id",
          "dimension": {
            "name": "course",
            "id": "id",
            "role": "course"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the assignment the quiz belongs to.",
          "name": "assignment_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the account of the course this group belongs to.",
          "name": "course_account_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the enrollment term of the course this group belongs to.",
          "name": "enrollment_term_id",
          "dimension": {
            "name": "enrollment_term",
            "id": "id",
            "role": "enrollment_term"
          }
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "quiz_question_group_fact"
    },
    "quiz_question_dim": {
      "dw_type": "dimension",
      "description": "Attributes of a question associated with a quiz.",
      "columns": [
        {
          "type": "bigint",
          "description": "Unique surrogate key for the quiz question.",
          "name": "id"
        },
        {
          "type": "bigint",
          "description": "Primary key for this quiz question in the 'quiz_questions' table.",
          "name": "canvas_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the quiz dimension table.",
          "name": "quiz_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the quiz group dimension table.",
          "name": "quiz_question_group_id"
        },
        {
          "type": "int",
          "description": "Order in which the question will be displayed in the quiz relative to other questions associated with the quiz.",
          "name": "position"
        },
        {
          "type": "varchar",
          "description": "Denotes where the quiz question is in the workflow. Possible values are 'unpublished', 'published' and 'deleted'. Defaults to 'unpublished'.",
          "name": "workflow_state",
          "length": 256
        },
        {
          "type": "timestamp",
          "description": "Time when the quiz question was created.",
          "name": "created_at"
        },
        {
          "type": "timestamp",
          "description": "Time when the quiz question was last updated.",
          "name": "updated_at"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the assessment question dimension table (to be made available in later releases).",
          "name": "assessment_question_id"
        },
        {
          "type": "int",
          "description": "Version of the assessment question associated with the quiz question (to be made available in later releases).",
          "name": "assessment_question_version"
        },
        {
          "type": "varchar",
          "description": "Name of the question.",
          "name": "name",
          "length": 256
        },
        {
          "type": "varchar",
          "description": "Denotes the type of the question. Possible values are 'calculated_question', 'essay_question', 'file_upload_question', 'fill_in_multiple_blanks_question', 'matching_question', 'multiple_answers_question', 'multiple_choice_question', 'multiple_dropdowns_question', 'numerical_question', 'short_answer_question', 'text_only_question' and 'true_false_question'.",
          "name": "question_type",
          "length": 256
        },
        {
          "type": "text",
          "description": "Text content of the question.",
          "name": "question_text"
        },
        {
          "type": "varchar",
          "description": "Denotes if regrading is available for the question. Possible values are 'available' and 'unavailable' for question types 'multiple_answers_question', 'multiple_choice_question', 'true_false_question' and 'NULL' for others. Defaults to 'available' for the allowed question types and 'NULL' for the rest.",
          "name": "regrade_option",
          "length": 256
        },
        {
          "type": "text",
          "description": "Comments to be displayed if the student answers the question correctly.",
          "name": "correct_comments"
        },
        {
          "type": "text",
          "description": "Comments to be displayed if the student answers the question incorrectly.",
          "name": "incorrect_comments"
        },
        {
          "type": "text",
          "description": "Comments to be displayed regardless of how the student answers the question.",
          "name": "neutral_comments"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "quiz_question_dim"
    },
    "quiz_question_fact": {
      "dw_type": "fact",
      "description": "Measures of a question associated with a quiz.",
      "columns": [
        {
          "type": "bigint",
          "description": "Foreign key to the quiz question dimension table.",
          "name": "quiz_question_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the quiz dimension table.",
          "name": "quiz_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the quiz group dimension table.",
          "name": "quiz_question_group_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the assessment question dimension table (to be made available in later releases).",
          "name": "assessment_question_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the course this group's quiz belongs to.",
          "name": "course_id",
          "dimension": {
            "name": "course",
            "id": "id",
            "role": "course"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the assignment the quiz belongs to.",
          "name": "assignment_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the account of the course this group belongs to.",
          "name": "course_account_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the enrollment term of the course this group belongs to.",
          "name": "enrollment_term_id",
          "dimension": {
            "name": "enrollment_term",
            "id": "id",
            "role": "enrollment_term"
          }
        },
        {
          "type": "double precision",
          "description": "Maximum number of points that can be awarded for answering the question correctly.",
          "name": "points_possible"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "quiz_question_fact"
    },
    "quiz_question_answer_dim": {
      "dw_type": "dimension",
      "description": "Attributes of an answer related to a quiz question.",
      "columns": [
        {
          "type": "bigint",
          "description": "Unique surrogate key for the quiz question answer. As with all surrogate keys in Canvas Data, there is no guarantee of stability. That said, this key is particularly unstable and will likely change from dump to dump even if there are no data change.",
          "name": "id"
        },
        {
          "type": "bigint",
          "description": "Primary key for this quiz question answer. No table available in Canvas.",
          "name": "canvas_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the quiz question dimension column.",
          "name": "quiz_question_id"
        },
        {
          "type": "text",
          "description": "Text of the answer.",
          "name": "text"
        },
        {
          "type": "text",
          "description": "HTML markup of the text.",
          "name": "html"
        },
        {
          "description": "Specific contextual comments for a particular answer.",
          "type": "text",
          "name": "comments"
        },
        {
          "type": "text",
          "description": "(Used in 'short_answer_question', also known as 'fill_in_the_blank'. Set to 'NULL' in others) Text following the missing word.",
          "name": "text_after_answers"
        },
        {
          "type": "varchar",
          "description": "(Used in 'matching_question', set to 'NULL' in others) Static value of the answer that will be displayed on the left for students to match for.",
          "name": "answer_match_left",
          "length": 256
        },
        {
          "type": "varchar",
          "description": "(Used in 'matching_question', set to 'NULL' in others) Correct match for the value given in 'answer_match_left', displayed in a drop-down with other 'answer_match_right' values.",
          "name": "answer_match_right",
          "length": 256
        },
        {
          "type": "varchar",
          "description": "(Used in 'matching_question', set to 'NULL' in others) List of distractors (incorrect answers), delimited by new lines, that will be seeded with all the 'answer_match_right' values.",
          "name": "matching_answer_incorrect_matches",
          "length": 256
        },
        {
          "type": "varchar",
          "description": "(Used in 'numerical_question', set to 'NULL' in others) Denotes the type of numerical answer that is expected. Possible values are 'exact_answer' and 'range_answer'.",
          "name": "numerical_answer_type",
          "length": 256
        },
        {
          "type": "varchar",
          "description": "(Used in 'fill_in_multiple_blanks_question' and 'multiple_dropdowns_question', set to 'NULL' otherwise) Refers to the ID of the blank(s) in the question text.",
          "name": "blank_id",
          "length": 256
        },
        {
          "type": "double precision",
          "description": "(Used in 'numerical_question' with answer type 'exact_answer', set to 'NULL' otherwise) Value the answer must be equal to.",
          "name": "exact"
        },
        {
          "type": "double precision",
          "description": "(Used in 'numerical_question' with answer type 'exact_answer', set to 'NULL' otherwise) Margin of error allowed for a student's answer.",
          "name": "margin"
        },
        {
          "type": "double precision",
          "description": "(Used in 'numerical_question' with answer type 'range_answer', set to 'NULL' otherwise) Start of the allowed range (inclusive).",
          "name": "starting_range"
        },
        {
          "type": "double precision",
          "description": "(Used in 'numerical_question' with answer type 'range_answer', set to 'NULL' otherwise) End of the allowed range (inclusive).",
          "name": "ending_range"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "quiz_question_answer_dim"
    },
    "quiz_question_answer_fact": {
      "dw_type": "fact",
      "description": "Measures for answers related to a quiz question.",
      "columns": [
        {
          "description": "Foreign key to the quiz question answer dimension table. As with all surrogate keys in Canvas Data, there is no guarantee of stability. That said, this key is particularly unstable and will likely change from dump to dump even if there are no data change.",
          "type": "bigint",
          "name": "quiz_question_answer_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the quiz question dimension table.",
          "name": "quiz_question_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the quiz group dimension table.",
          "name": "quiz_question_group_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the quiz dimension table.",
          "name": "quiz_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the assessment question dimension table (to be made available in later releases).",
          "name": "assessment_question_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the course this group's quiz belongs to.",
          "name": "course_id",
          "dimension": {
            "name": "course",
            "id": "id",
            "role": "course"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the assignment the quiz belongs to.",
          "name": "assignment_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the account of the course this group belongs to.",
          "name": "course_account_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the enrollment term of the course this group belongs to.",
          "name": "enrollment_term_id",
          "dimension": {
            "name": "enrollment_term",
            "id": "id",
            "role": "enrollment_term"
          }
        },
        {
          "description": "Integer value to determine correctness of the answer. Incorrect answers should be 0, correct answers should be non-negative.",
          "type": "double precision",
          "name": "weight"
        },
        {
          "type": "double precision",
          "description": "(Used in 'numerical_question' with answer type 'exact_answer', set to 'NULL' otherwise) Value the answer must be equal to.",
          "name": "exact"
        },
        {
          "type": "double precision",
          "description": "(Used in 'numerical_question' with answer type 'exact_answer', set to 'NULL' otherwise) Margin of error allowed for a student's answer.",
          "name": "margin"
        },
        {
          "type": "double precision",
          "description": "(Used in 'numerical_question' with answer type 'range_answer', set to 'NULL' otherwise) Start of the allowed range (inclusive).",
          "name": "starting_range"
        },
        {
          "type": "double precision",
          "description": "(Used in 'numerical_question' with answer type 'range_answer', set to 'NULL' otherwise) End of the allowed range (inclusive).",
          "name": "ending_range"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "quiz_question_answer_fact"
    },
    "requests": {
      "incremental": true,
      "dw_type": "both",
      "description": "Pageview requests. Disclaimer:   The data in the requests table is a 'best effort' attempt, and is not guaranteed to be complete or wholly accurate. This data is meant to be used for rollups and analysis in the aggregate, _not_ in isolation for auditing, or other high-stakes analysis involving examining single users or small samples.    As this data is generated from the Canvas logs files, not a transactional database, there are many places along the way data can be lost and/or duplicated (though uncommon).   Additionally, given the size of this data, our processes are often done on monthly cycles for many parts of the requests tables, so as errors occur they can only be rectified monthly.",
      "hints": {
        "sort_key": "timestamp"
      },
      "columns": [
        {
          "type": "guid",
          "description": "Request ID assigned by the canvas system to the request.",
          "name": "id"
        },
        {
          "type": "datetime",
          "description": "Timestamp when the request was made in UTC.",
          "name": "timestamp",
          "sortKey": true
        },
        {
          "description": "Year when the request was made.",
          "name": "timestamp_year",
          "type": "varchar",
          "length": 256
        },
        {
          "description": "Month when the request was made.",
          "name": "timestamp_month",
          "type": "varchar",
          "length": 256
        },
        {
          "description": "Day when the request was made.",
          "name": "timestamp_day",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "bigint",
          "description": "Foreign key in user_dim for the user that made the request. If the request was made by one user masquerading as another, then this column contains the ID of the user being masqueraded as.",
          "name": "user_id",
          "dimension": {
            "name": "user",
            "id": "id",
            "role": "user"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key in course_dim for the course that owned the page requested. Set to NULL if not applicable.",
          "name": "course_id",
          "dimension": {
            "name": "course",
            "id": "id",
            "role": "course"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key in account_dim for the root account on which this request was made.",
          "name": "root_account_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key in account_dim for the account the associated course is owned by.",
          "dimension": {
            "name": "account_dim",
            "id": "id"
          },
          "name": "course_account_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key in quiz_dim if the page request is for a quiz, otherwise NULL.",
          "name": "quiz_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key in discussion_dim if page request is for a discussion, otherwise NULL.",
          "name": "discussion_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key in conversation_dim if page request is for a conversation, otherwise NULL.",
          "dimension": {
            "name": "conversation_dim",
            "id": "id"
          },
          "name": "conversation_id"
        },
        {
          "type": "bigint",
          "description": "Assignment foreign key if page request is for an assignment, otherwise NULL.",
          "name": "assignment_id"
        },
        {
          "type": "text",
          "description": "URL which was requested.",
          "name": "url"
        },
        {
          "type": "text",
          "description": "User agent header received from the users browser/client software.",
          "name": "user_agent"
        },
        {
          "description": "HTTP method/verb (GET, PUT, POST etc.) that was sent with the request.",
          "name": "http_method",
          "type": "varchar",
          "length": 256
        },
        {
          "description": "IP address that was recorded from the request.",
          "name": "remote_ip",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "bigint",
          "description": "Total time required to service the request in microseconds.",
          "name": "interaction_micros"
        },
        {
          "description": "The controller the Canvas web application used to service this request.",
          "name": "web_application_controller",
          "type": "varchar",
          "length": 256
        },
        {
          "description": "Controller the Canvas web application used to service this request. (There is a typo in the field name, in order to minimize impact, this will be changed in a future version of Canvas Data.)",
          "name": "web_applicaiton_action",
          "type": "varchar",
          "length": 256
        },
        {
          "description": "Containing object type the Canvas web application used to service this request.",
          "name": "web_application_context_type",
          "type": "varchar",
          "length": 256
        },
        {
          "description": "Containing object's ID the Canvas web application used to service this request.",
          "name": "web_application_context_id",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "bigint",
          "description": "If the request was processed by one user masquerading as another, then this column contains the real user ID of the user.",
          "name": "real_user_id"
        },
        {
          "description": "ID of the user's session where this request was made.",
          "name": "session_id",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "bigint",
          "description": "(Not implemented) Foreign key to the user agent dimension table.",
          "name": "user_agent_id"
        },
        {
          "type": "varchar",
          "description": "HTTP status of the request.",
          "name": "http_status",
          "length": 10
        },
        {
          "description": "HTTP protocol version.",
          "name": "http_version",
          "type": "varchar",
          "length": 256
        }
      ],
      "tableName": "requests"
    },
    "external_tool_activation_dim": {
      "dw_type": "dimension",
      "description": "Attributes for external tool (LTI) activations.\nNote that activations can happen on courses or accounts.   If this activation is associated with a course then course_id, course_account_id and enrollment_term_id will be populated.  If this activation is associated with an account then only account_id will be populated.",
      "columns": [
        {
          "type": "bigint",
          "description": "Unique surrogate id for tool activations",
          "name": "id"
        },
        {
          "type": "bigint",
          "description": "Primary key for this record in the context_external_tools table in the Canvas database",
          "name": "canvas_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the course if this tool was activated in a course",
          "name": "course_id",
          "dimension": {
            "name": "course",
            "id": "id",
            "role": "course"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the account this tool was activated in if it was activated in an account",
          "name": "account_id",
          "dimension": {
            "name": "account",
            "id": "id",
            "role": "account"
          }
        },
        {
          "description": "The type of object the tool was activated in, (course or account)",
          "name": "activation_target_type",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "varchar",
          "description": "The URL to where the tool may launch to",
          "name": "url",
          "length": 4096
        },
        {
          "description": "The name of tool activation as entered by the user",
          "name": "name",
          "type": "varchar",
          "length": 256
        },
        {
          "description": "The description of the tool activation as entered by the user",
          "name": "description",
          "type": "varchar",
          "length": 256
        },
        {
          "description": "Workflow state for activation (active, deleted)",
          "name": "workflow_state",
          "type": "varchar",
          "length": 256
        },
        {
          "description": "Privacy setting for activation (name_only, email_only, anonymous, public)",
          "name": "privacy_level",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "timestamp",
          "description": "Timestamp when the activation was created",
          "name": "created_at"
        },
        {
          "type": "timestamp",
          "description": "Timestamp when the activation was last updated",
          "name": "updated_at"
        },
        {
          "description": "The tool id received from the external tool. May be missing if the tool does not send an id.",
          "name": "tool_id",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "boolean",
          "description": "true - tool is selectable in all scenarios. false - not selectable for assignment or module selection menu",
          "name": "selectable_all"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "external_tool_activation_dim"
    },
    "external_tool_activation_fact": {
      "dw_type": "fact",
      "description": "Facts and denormalized dimensions for external tool (LTI) activations.",
      "columns": [
        {
          "type": "bigint",
          "description": "Foreign key to the external_tool_activation_dim dimension with attribute for this activation",
          "name": "external_tool_activation_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the course if this tool was activated in a course",
          "name": "course_id",
          "dimension": {
            "name": "course",
            "id": "id",
            "role": "course"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the account this tool was activated in if it was activated in an account",
          "name": "account_id",
          "dimension": {
            "name": "account",
            "id": "id",
            "role": "account"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the root account for this data",
          "name": "root_account_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the course's enrollment term if this tool was activated in a course",
          "name": "enrollment_term_id",
          "dimension": {
            "name": "enrollment_term",
            "id": "id",
            "role": "enrollment_term"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the course's account if this tool was activated in a course",
          "name": "course_account_id"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "external_tool_activation_fact"
    },
    "wiki_dim": {
      "description": "Attributes for wiki in canvas.",
      "dw_type": "dimension",
      "columns": [
        {
          "type": "bigint",
          "description": "Unique id for the wiki.",
          "name": "id"
        },
        {
          "type": "bigint",
          "description": "Primary key to the wikis table in canvas.",
          "name": "canvas_id"
        },
        {
          "description": "Type of Parent the wiki belongs to. For example, Groups or Courses.",
          "name": "parent_type",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "text",
          "description": "Title for the wiki.",
          "name": "title"
        },
        {
          "type": "timestamp",
          "description": "Timestamp when the wiki was first saved in the system.",
          "name": "created_at"
        },
        {
          "type": "timestamp",
          "description": "Timestamp when the wiki was last updated in the system.",
          "name": "updated_at"
        },
        {
          "type": "text",
          "description": "URL of the front page of the wiki.",
          "name": "front_page_url"
        },
        {
          "type": "boolean",
          "description": "True if the wiki does not have a front page or is set to NULL.",
          "name": "has_no_front_page"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "wiki_dim"
    },
    "wiki_fact": {
      "description": "Measures for wikis.",
      "dw_type": "fact",
      "columns": [
        {
          "type": "bigint",
          "description": "Foreign key to the wiki dimension.",
          "name": "wiki_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the courses table if the wiki is associated with a Course. Otherwise this field is set to NULL.",
          "name": "parent_course_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the groups table if the wiki is associated with a Group. Otherwise this field is set to NULL.",
          "name": "parent_group_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the account dimension for the account associated with the wiki's course. If the wiki is not associated to a Course, this field is set to NULL.",
          "name": "parent_course_account_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the account dimension for the account associated with the wiki's group. If the wiki is not associated to a Group, this field is set to NULL.",
          "name": "parent_group_account_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the accounts table that this wiki belongs to. Helpful for directly finding the account associated with the wiki, irrespective of whether it belongs to a Course or a Group.",
          "name": "account_id",
          "dimension": {
            "name": "account",
            "id": "id",
            "role": "account"
          }
        },
        {
          "type": "bigint",
          "description": "Root account Id of the account the wiki belongs to. Foreign key to the accounts table.",
          "name": "root_account_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the enrollment term table of the course this wiki is associated with. Otherwise this is set to NULL.",
          "name": "enrollment_term_id",
          "dimension": {
            "name": "enrollment_term",
            "id": "id",
            "role": "enrollment_term"
          }
        },
        {
          "type": "bigint",
          "description": "(Not implemented) Foreign key to the group categories table of the group this wiki is associated with. Otherwise this is set to NULL.",
          "name": "group_category_id"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "wiki_fact"
    },
    "wiki_page_dim": {
      "description": "Attributes for wiki pages in canvas.",
      "dw_type": "dimension",
      "columns": [
        {
          "type": "bigint",
          "description": "Unique id for the wiki pages.",
          "name": "id"
        },
        {
          "type": "bigint",
          "description": "Primary key for the wiki pages table.",
          "name": "canvas_id"
        },
        {
          "description": "Title of the wiki page.",
          "name": "title",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "text",
          "description": "Body of the wiki page. Redshift will only load the first 256 bytes of the body.",
          "name": "body"
        },
        {
          "description": "Current state the wiki is in. For Example, active, unpublished, deleted.",
          "name": "workflow_state",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "timestamp",
          "description": "Timestamp when the wiki page was created in the system.",
          "name": "created_at"
        },
        {
          "type": "timestamp",
          "description": "Timestamp when the wiki page was last updated in the system.",
          "name": "updated_at"
        },
        {
          "type": "text",
          "description": "URL for the wiki page.",
          "name": "url"
        },
        {
          "type": "boolean",
          "description": "Editing protection for the wiki page. It is false by default.",
          "name": "protected_editing"
        },
        {
          "description": "Users or roles who can edit a wiki page.",
          "name": "editing_roles",
          "type": "varchar",
          "length": 256
        },
        {
          "type": "timestamp",
          "description": "Timestamp the wiki page was last revised in the system.",
          "name": "revised_at"
        },
        {
          "type": "boolean",
          "description": "True if the wiki page can be locked. This prevents it from being visible to others until ready.",
          "name": "could_be_locked"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "wiki_page_dim"
    },
    "wiki_page_fact": {
      "description": "Measures for wiki pages.",
      "dw_type": "fact",
      "columns": [
        {
          "type": "bigint",
          "description": "Foreign key to the wiki pages dimension.",
          "name": "wiki_page_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the wikis dimension.",
          "name": "wiki_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the courses table if the wiki that owns the wiki page is associated with a Course. Otherwise this field is set to NULL.",
          "name": "parent_course_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the groups table if the wiki that owns the wiki page is associated with a Group. Otherwise this field is set to NULL.",
          "name": "parent_group_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the account dimension for the account associated with the wiki page's course. If the wiki page is not associated to a Course, this field is set to NULL.",
          "name": "parent_course_account_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the account dimension for the account associated with the wiki page's group. If the wiki page is not associated to a Group, this field is set to NULL.",
          "name": "parent_group_account_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the user table.",
          "name": "user_id",
          "dimension": {
            "name": "user",
            "id": "id",
            "role": "user"
          }
        },
        {
          "type": "bigint",
          "description": "Foreign key to the accounts table that this wiki page belongs to. Helpful for directly finding the account associated with the wiki page, irrespective of whether it belongs to a Course or a Group.",
          "name": "account_id",
          "dimension": {
            "name": "account",
            "id": "id",
            "role": "account"
          }
        },
        {
          "type": "bigint",
          "description": "Root account Id of the account the wiki belongs to. Foreign key to the accounts table.",
          "name": "root_account_id"
        },
        {
          "type": "bigint",
          "description": "Foreign key to the enrollment term table of the course this wiki page is associated with. Otherwise this is set to NULL.",
          "name": "enrollment_term_id",
          "dimension": {
            "name": "enrollment_term",
            "id": "id",
            "role": "enrollment_term"
          }
        },
        {
          "type": "bigint",
          "description": "(Not implemented) Foreign key to the group categories table of the group this wiki page is associated with. Otherwise this is set to NULL.",
          "name": "group_category_id"
        },
        {
          "type": "int",
          "description": "(Deprecated) No longer used in Canvas.",
          "name": "wiki_page_comments_count"
        },
        {
          "type": "int",
          "description": "Number of views per wiki page.",
          "name": "view_count"
        }
      ],
      "hints": {},
      "incremental": false,
      "tableName": "wiki_page_fact"
    }
  }
}